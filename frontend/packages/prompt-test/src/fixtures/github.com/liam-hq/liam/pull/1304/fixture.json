{
    "name": "liam-hq/liam/pull/1304",
    "assert": [
      {
        "type": "llm-rubric",
        "value": "The report mentions about RLS"
      }
    ],
    "vars": 
{
    "docsContent": "# docs/schemaPatterns.md\n\n# Reusable patterns and rules for database schema design\n\n## General\n\n- Use lowercase for SQL reserved words to maintain consistency and readability.\n- Employ consistent, descriptive identifiers for tables, columns, and other database objects.\n- Use white space and indentation to enhance the readability of your code.\n- Store dates in ISO 8601 format (`yyyy-mm-ddThh:mm:ss.sssss`).\n- Include comments for complex logic, using `/* ... */` for block comments and `--` for line comments.\n\n## Naming Conventions\n\n- All table names should be singular (e.g., `KnowledgeSuggestionDocMapping`), using UpperCamelCase.\n- Fields should use lowerCamelCase for naming, ensuring clarity and consistency across the schema.\n\n### Tables\n\n- Avoid prefixes like 'tbl' and ensure no table name matches any of its column names.\n- Always add an `id` column of type `identity generated always` unless otherwise specified.\n- Create all tables in the `public` schema unless otherwise specified.\n- Always add the schema to SQL queries for clarity.\n- Always add a comment to describe what the table does. The comment can be up to 1024 characters.\n\n### Columns\n\n- Use singular names.\n- For references to foreign tables, use the singular of the table name with the `id` suffix. For example `userId` to reference the `User` table\n- Always use lowercase except in cases involving acronyms or when readability would be enhanced by an exception.\n\n#### Examples\n\n```sql\ncreate table \"public\".\"Book\" (\n  \"id\" bigint generated always as identity primary key,\n  \"title\" text not null,\n  \"authorId\" bigint references \"public\".\"Author\" (id)\n);\ncomment on table \"public\".\"Book\" is 'A list of all the books in the library.';\n```\n\n## Structural Modeling Patterns\n\n- Models should clearly define foreign key relationships with appropriate constraints to maintain referential integrity.\n\n## Preferred Types\n\n- Use ENUM types for fields that have a limited set of valid values, such as categories and severities, to promote consistency.\n\n\n---\n\n# docs/migrationOpsContext.md\n\n# Migration Operations Context\n\nOur project uses Supabase Branching for database migration management. This system integrates with our GitHub repository and automatically applies migrations when pull requests are merged to the main branch.\n\n## Deployment System\n\n- Supabase Branching automatically runs migrations when PRs merge to main.\n- Migrations in `frontend/packages/db/supabase/migrations` run sequentially by timestamp.\n\n## Key Constraints\n\n- No guaranteed order between app deployments and migrations.\n- Either app (`@liam-hq/app`, `@liam-hq/jobs`) or migrations may complete first.\n- Migrations must be backward compatible with the previous app version.\n- App must work with both old and new database schema.\n\n## Branching Workflow\n\n- Preview branches created automatically for PRs.\n- Each commit with migration changes triggers runs on preview instance.\n- Schema drift possible between multiple preview branches.\n\n## Safety Practices\n\n- Test all migrations thoroughly in preview branches.\n- Design for race conditions between app and database deployments.\n- Keep migrations small and focused.\n- Regularly merge from main to prevent schema divergence.\n- Monitor PR comments for deployment status.\n\n## Create migration\n\nThis project uses the migrations provided by the Supabase CLI.\n\n### Creating a migration file\n\nGiven the context of the user's message, create a database migration file inside the folder `frontend/packages/db/supabase/migrations/`.\n\nThe file MUST following this naming convention:\n\nThe file MUST be named in the format `YYYYMMDDHHmmss_short_description.sql` with proper casing for months, minutes, and seconds in UTC time:\n\n1. `YYYY` - Four digits for the year (e.g., `2024`).\n2. `MM` - Two digits for the month (01 to 12).\n3. `DD` - Two digits for the day of the month (01 to 31).\n4. `HH` - Two digits for the hour in 24-hour format (00 to 23).\n5. `mm` - Two digits for the minute (00 to 59).\n6. `ss` - Two digits for the second (00 to 59).\n7. Add an appropriate description for the migration.\n\nFor example:\n\n```\n20240906123045_create_profiles.sql\n```\n\n## SQL Guidelines\n\nWrite Postgres-compatible SQL code for Supabase migration files that:\n\n- Includes a header comment with metadata about the migration, such as the purpose, affected tables/columns, and any special considerations.\n- Includes thorough comments explaining the purpose and expected behavior of each migration step.\n- Write all SQL in lowercase.\n- Add copious comments for any destructive SQL commands, including truncating, dropping, or column alterations.\n- **Follow the schema design patterns and rules documented in [`docs/schemaPatterns.md`](./schemaPatterns.md)** for consistent database design.\n\nThe generated SQL code should be production-ready, well-documented, and aligned with Supabase's best practices.\n\n\n---\n\n# .ai-agents/memory-bank/productContext.md\n\n# Product Context\n\n## Purpose\nLiam Migration aims to address the challenges associated with complex DB schema changes by providing AI-assisted solutions that reduce risks and rework costs. It is designed to enable development teams to manage release cycles safely and efficiently.\n\n## Problems Solved\n- **Dilemma of Fast Development and Quality Assurance**: Frequent specification changes and accelerated implementation speed due to AI code generation lead to design deficiencies and technical debt, making it difficult to balance quality and development speed.\n- **Irreversibility Risk of DB Schema Changes**: Column deletions and type changes are difficult to roll back, increasing the fear of changes and causing overly cautious development cycles.\n- **Lack of Review Due to Personalization**: Limited members with DB design knowledge lead to a lack of review systems, causing development stagnation and difficulty in unifying design guidelines across teams.\n\n## How It Works\nLiam Migration provides a comprehensive solution that includes:\n- **Review Agent**: An AI component that automatically analyzes migration impact, visualizes risks, and predicts performance and data integrity impacts.\n- **Interactive Knowledge Base**: Promotes contextual understanding by linking review comments with ER diagrams and automatically extracts and formalizes team-specific best practices.\n- **Continuous Quality Optimization**: Establishes quality standards through the reuse of review comments and provides phased optimization according to project scale and maturity.\n\n## User Experience Goals\n- Provide a seamless and efficient review process for Reviewer Users, focusing on safety and speed in scaling DB schemas.\n- Ensure that Builder User features are developed in later phases, leveraging accumulated review data and feedback for future optimization.\n- Offer a user-friendly interface for reviewing migration changes, cautions, and AI suggestions, allowing users to understand review status and improvement points effectively.\n\n\n---\n\n# .ai-agents/memory-bank/projectbrief.md\n\n# Project Brief\n\n## Overview\nLiam Migration is a new solution designed to significantly reduce the risks and rework costs associated with complex DB schema changes through AI support and automated reviews. It enables development teams to safely and quickly manage release cycles. Beyond OSS-based ER diagram visualization, it offers migration diff checks and intelligent optimization suggestions at the Pull Request stage, achieving a balance between design quality and development speed.\n\n## Core Requirements and Goals\n- Reduce risks and rework costs in DB schema changes using AI support and automated reviews.\n- Enable safe and fast release cycles for development teams.\n- Provide migration diff checks and intelligent optimization suggestions at the Pull Request stage.\n- Achieve a balance between design quality and development speed.\n\n## Ubiquitous Language\n- **Liam Migration**: The product name. Reduces risks and rework costs associated with DB schema changes through AI support and automated reviews, enabling safe and fast development cycles.\n- **Project**: A management unit for database schemas, continuously updated through migrations, accumulating schema change history and design knowledge.\n- **Liam ERD**: An OSS-based tool for automatic generation and visualization of ER diagrams, developed before Liam Migration.\n- **Migration**: A series of operations to change the database schema (structure), including creating, modifying, and deleting tables and columns, transitioning the database to a new structure. In this product, it refers only to schema changes, not database or data migrations.\n- **Review Agent**: An AI component that automatically analyzes the impact range of migrations, predicting risks, performance, and data integrity impacts, improving review accuracy through continuous learning.\n- **Reviewer User**: A human role in the product. Validates and approves changes based on AI feedback and automatic analysis results, ensuring design safety and quality.\n- **Builder User**: A human role in the product. Responsible for executing DB schema changes (code generation and migration application). Initially focused on Reviewer, with phased implementation planned.\n- **Migration Review Page**: A dedicated interface for centrally reviewing detailed migration changes, cautions, and AI suggestions, allowing users to understand review status and improvement points.\n- **GitHub App**: A mechanism for automating and streamlining comments and review approvals on PRs through integration with GitHub repositories, supporting seamless development flow.\n\n## Background\n### Current Situation\n- Liam ERD has alleviated the pain of update costs and schema understanding at a level comparable to other similar tools, including OSS, through automatic generation and visualization of ER diagrams.\n- It has received high praise for \"UI/UX refinement,\" \"support for large tables,\" \"CI/CD integration,\" and \"automatic document updates.\"\n\n### Challenges\n- The proliferation of the free OSS version leads to \"star acquisition and user community expansion\" but lacks a clearly established monetization model.\n- Documentation and visualization alone make it difficult to differentiate from competing tools, making it challenging for companies to have a strong reason to adopt the paid version.\n\n### Future Direction\n- To answer the fundamental question of \"Why ERD now?\" and \"Why is it worth paying for?\" it is necessary to propose greater value.\n- Automating and enhancing tasks that are burdensome for developers, in addition to alleviating pain, will be key to creating new gains (dramatic improvements in productivity and design quality).\n- The phase of DB schema changes (migrations) is a challenging area with high rework costs and a tendency to become personalized, and it is not sufficiently solved by existing competing tools.\n- Therefore, high-value-added features such as AI-based schema reviews and diff analysis will be provided mainly in paid plans, aiming for a sustainable business model while coexisting with OSS.\n\n\n---\n\n# .ai-agents/memory-bank/systemPatterns.md\n\n# System Patterns\n\n## System Architecture\nLiam Migration is designed to integrate seamlessly with existing development workflows, particularly through its GitHub App integration. It leverages AI components to provide intelligent analysis and suggestions during the migration review process.\n\nThe project uses a monorepo structure managed with pnpm workspaces, allowing for maintenance of multiple packages and applications in a single repository while sharing dependencies and code.\n\n## Key Technical Decisions\n- **AI-Driven Analysis**: The use of AI to automatically analyze migration impacts, predict risks, and suggest optimizations is central to the product's value proposition.\n- **GitHub Integration**: The integration with GitHub repositories allows for automated comments and review approvals, streamlining the development process.\n- **OSS and Paid Plan Coexistence**: The product is designed to coexist with its OSS version, offering high-value features in paid plans to ensure a sustainable business model.\n- **Monorepo Structure**: The decision to use a monorepo structure with pnpm workspaces enables efficient code sharing and dependency management.\n- **TypeScript-First**: All components and functions are written in TypeScript to ensure type safety and improve developer experience.\n- **Database Access Strategy**: Using Supabase JS for database access to leverage Supabase's optimized query capabilities and standardize the data access layer. This requires careful handling of type compatibility issues, particularly with bigint fields and nested relationships.\n- **Type Safety Approach**: When working with Supabase, we use type assertions carefully to bridge the gap between the Supabase types and our application's expected types, particularly for nested queries and bigint fields.\n- **Schema File Management Strategy**: Using direct path comparison instead of pattern matching for schema file detection, with the GitHubSchemaFilePath table (renamed from WatchSchemaFilePattern) to store exact file paths.\n- **Standardized Supabase Client Usage**: Using a shared createClient function across the codebase to ensure consistent Supabase client creation and usage.\n\n## Design Patterns\n- **Modular Architecture**: The system is built with a modular architecture to allow for easy integration and extension of features.\n- **Function Separation**: Business logic is separated into dedicated function files that are called from task definitions, making the code more modular and testable.\n- **Task Pipeline**: A series of tasks are chained together to form a complete workflow, with each task responsible for a specific part of the process.\n- **Continuous Learning**: The AI components are designed to continuously learn from past reviews to improve accuracy and relevance over time.\n- **Component-Based UI**: The UI is built using a component-based approach with React, promoting reusability and maintainability.\n- **Server-Client Separation**: Clear separation of server and client components in Next.js, with appropriate data fetching responsibilities.\n- **Efficient Data Access**: The system uses Supabase JS for database access with optimized queries using nested joins for efficient data retrieval.\n- **Type-Safe Database Access**: When using Supabase, we implement type-safe queries by using type assertions to bridge the gap between Supabase's types and our application's expected types. This includes handling bigint to number conversions and properly typing nested relationship data.\n- **Intermediate Mapping Tables**: For many-to-many relationships between entities, we use intermediate mapping tables (e.g., OverallReviewKnowledgeSuggestionMapping, KnowledgeSuggestionDocMapping) to maintain clean separation of concerns and enable flexible relationship management.\n- **Transaction Management**: Moving away from manual rollback processing in server actions to a more robust approach using Supabase RPC for transaction management. This will provide a consistent and reliable way to handle database transactions across the application.\n- **Direct Path Comparison**: Using direct path comparison instead of pattern matching for schema file detection, providing a more precise and efficient approach to schema file management.\n- **Consistent Naming Conventions**: Using consistent naming conventions across the codebase, such as GitHubSchemaFilePath and GitHubDocFilePath for GitHub-integrated file management.\n- **Context-Enriched AI Prompts**: The AI review generation incorporates multiple sources of context (PR descriptions, comments, documentation, schema files, and code changes) to provide more comprehensive and relevant analysis.\n\n## Component Relationships\n- **GitHub Webhook Handler**: Receives webhook events from GitHub, extracts schema changes, and triggers the review process.\n- **Task Pipeline**: A series of tasks (savePullRequestTask → generateReviewTask → saveReviewTask → postCommentTask → generateDocsSuggestionTask/generateSchemaMetaSuggestionTask → createKnowledgeSuggestionTask) that process the schema changes, generate reviews, and create knowledge suggestions.\n- **Review Agent**: Works closely with the GitHub App to provide real-time analysis and feedback on migration changes.\n- **Migration Review Page**: Serves as the central interface for users to review detailed migration changes, AI suggestions, and improvement points.\n- **Interactive Knowledge Base**: Links review comments with ER diagrams to enhance contextual understanding and formalize best practices.\n- **Document Viewer**: Renders raw text content from GitHub repositories, providing a simple way to view documentation and other text files.\n- **Schema Metadata Generator**: Analyzes PR reviews and schema changes to generate metadata enhancements that improve the database structure without changing the core schema.\n\n## Repository Structure\nThe project follows a structured organization with clear separation of concerns:\n\n- **Apps**: Contains the main web applications (app, docs, erd-sample, migration-web)\n- **Packages**: Shared libraries and tools (cli, configs, db-structure, erd-core, ui)\n\nEach package has specific responsibilities and is designed to be modular and focused on specific functionality.\n\n\n---\n\n# .ai-agents/memory-bank/techContext.md\n\n# Technical Context\n\n## Technologies Used\n- **AI Components**: Utilized for analyzing migration impacts and providing intelligent suggestions.\n- **LangChain**: Framework for developing applications powered by language models, used for AI review generation and schema metadata suggestions. The project uses LangChain's ChatOpenAI integration for all prompt generators.\n- **OpenAI**: Provider of AI models used for generating schema reviews and metadata suggestions. The project specifically uses the 'o3-mini-2025-01-31' model for all prompt generators.\n- **Trigger.dev**: Task orchestration platform used for implementing the review pipeline and knowledge suggestion tasks.\n- **GitHub App**: Integrated to automate comments and review approvals on PRs, with enhanced API usage for fetching PR descriptions and comments.\n- **Supabase JS**: JavaScript client for Supabase, used for database access with support for optimized queries using nested joins.\n- **Supabase RPC**: Remote Procedure Call functionality in Supabase, planned for future implementation of robust transaction management across the application.\n- **AWS**: Deployed in the us-east-1 region for its high affinity with English-speaking markets and potential for future multi-region expansion.\n- **TypeScript**: Strongly-typed programming language that builds on JavaScript.\n- **React 18**: UI library for building component-based interfaces.\n- **Next.js 15**: React framework for server-rendered applications.\n- **Vite**: Build tool used in CLI for static site generation.\n- **Valtio**: State management.\n- **@xyflow/react (React Flow)**: Diagram visualization.\n- **Fumadocs**: Documentation site.\n- **CSS Modules**: For styling HTML elements with typed definitions.\n- **Radix UI**: For UI primitives.\n- **Lucide React**: For consistent iconography.\n\n## Development Setup\n- The product is integrated with existing development workflows through its GitHub App, allowing for seamless automation and review processes.\n- The system is designed to be modular, enabling easy integration and extension of features.\n- **Task Pipeline**: A series of tasks are chained together using Trigger.dev to form a complete review workflow, including schema metadata generation.\n- **Function Separation**: Business logic is separated into dedicated function files that are called from task definitions.\n- **Type Safety**: When working with Supabase, type assertions are used to bridge the gap between Supabase's types and the application's expected types, particularly for nested queries and bigint fields.\n- **Enhanced Prompt Structure**: AI prompts are structured to incorporate multiple sources of context, including PR descriptions, comments, documentation, schema files, and code changes. For schema metadata generation, prompts include the current schema metadata file content to enable incremental improvements rather than generating from scratch.\n- **Package Management**: pnpm for efficient dependency management.\n- **Monorepo Management**: pnpm workspaces.\n- **Build System**: Turborepo for optimized builds.\n- **Linting & Formatting**: \n  - Biome for code quality and formatting\n  - `pnpm fmt` command to format code according to project standards\n  - `pnpm lint` command to check for code quality issues and type errors\n- **Testing**: Vitest for unit testing, Playwright for e2e testing.\n  - **Supabase Testing Approach**: A direct testing approach is used with Supabase. We create real records in the database, run the actual functions with these records, and then clean up the test data afterwards. This provides more realistic tests that verify the actual functions with real database interactions, leveraging Supabase's ability to be executed directly in test environments.\n\n## Database Migration Workflow\n\n### Migration Documentation\n\nThe project maintains two key documents for database migrations:\n\n1. **Migration Operations Context** (`docs/migrationOpsContext.md`): Provides detailed guidance on the migration workflow, deployment system, key constraints, and SQL guidelines for creating migrations. This document explains how our project uses Supabase Branching for database migration management and outlines important safety practices.\n\n2. **Schema Patterns** (`docs/schemaPatterns.md`): Defines reusable patterns and rules for database schema design, including naming conventions, structural modeling patterns, and preferred types. This document ensures consistency in database design across the project.\n\nThese documents should be consulted when creating or reviewing database migrations to ensure adherence to project standards and best practices.\n\n### Schema Enhancements\n\nRecent schema enhancements include:\n\n1. **KnowledgeSuggestion Reasoning Field**: Added a `reasoning` TEXT field to the KnowledgeSuggestion table to store the rationale behind schema metadata update suggestions. This helps users understand the context and reasoning behind suggestions, enabling more informed decisions when approving them.\n\n### Supabase Migration Workflow\n\nThe migration workflow follows Supabase's recommended practices. All Supabase migration commands must be run from the `frontend/packages/db` directory:\n\n1. **Creating a new migration**:\n   ```bash\n   cd frontend/packages/db && pnpm supabase:migration:new <migration_name>\n   ```\n   This creates a new migration file in `supabase/migrations` directory.\n\n2. **Adding SQL to the migration file**:\n   Edit the generated migration file to include the necessary SQL statements for schema changes.\n\n3. **Applying migrations**:\n   ```bash\n   cd frontend/packages/db && pnpm supabase:migration:up\n   ```\n   This applies any pending migrations to the database.\n\n4. **Diffing changes from the Dashboard**:\n   If changes are made through the Dashboard UI, they can be captured as migrations:\n   ```bash\n   cd frontend/packages/db && pnpm supabase:migration -f <migration_name>\n   ```\n   This generates a migration file with the changes detected between the local database and the schema definition.\n\n5. **Resetting the database**:\n   ```bash\n   cd frontend/packages/db && pnpm supabase:reset\n   ```\n   This resets the database to a clean state, reapplies all migrations, and seeds the database.\n\n### Seeding Data\n\nSeed data can be defined in `supabase/seed.sql`. This file is executed when resetting the database with `pnpm supabase:reset`.\n\n### Type Safety\n\nAfter schema changes, regenerate TypeScript types and SQL schema:\n```bash\ncd frontend/packages/db && pnpm supabase:gen\n```\nThis ensures type safety when working with Supabase queries, and generates the SQL schema for the database.\n\n## Code Implementation Guidelines\n- Use TypeScript for all components and functions.\n- Use early returns whenever possible to make the code more readable.\n- Always use CSS Modules for styling HTML elements.\n- Use descriptive variable and function/const names. Event functions should be named with a \"handle\" prefix.\n- Implement accessibility features on elements.\n- Use consts instead of functions (e.g., \"const toggle = () =>\") and define types when possible.\n- Do not code within the `page.tsx` file in Next.js App Router. Instead, create a separate `XXXPage` component.\n- Follow the `tsconfig.json` paths settings and always use the correct alias for import paths.\n- Align data fetching responsibilities with the component's role (server vs. client-side).\n\n## Component Implementation Guidelines\n- Avoid using `default export`; always use `named export`.\n- When styling, prioritize using CSS Variables from the `@liam-hq/ui` package.\n- Prefer using UI components provided by `@liam-hq/ui` over custom implementations.\n- When using icons, always import them from `@liam-hq/ui`.\n\n## Technical Constraints\n- The product must coexist with its OSS version, offering high-value features in paid plans to ensure a sustainable business model.\n- The AI components require continuous learning from past reviews to improve accuracy and relevance over time.\n- Type compatibility issues with Supabase require careful handling, particularly for bigint fields and nested relationships.\n- Schema metadata generation requires accurate analysis of database schema changes and proper integration with the knowledge suggestion system.\n- Supabase types need to be updated whenever database schema changes are made, to maintain type safety across the application.\n\n## Dependencies\n- **AWS**: Used for deployment, with a focus on the us-east-1 region.\n- **GitHub**: Essential for integration and automation of review processes.\n- **AI Services**: Required for the intelligent analysis and suggestion features.\n- **Vercel**: Deployment of web applications.\n- **GitHub Actions**: CI/CD for continuous integration.\n\n\n---\n\n# docs/migrationPatterns.md\n\n# Safe and Consistent Migration Strategies\n\n- Migrations should be designed to be atomic and reversible, with comprehensive transaction handling.\n- Implement robust error handling and validation checks in migration scripts to ensure data integrity.\n- Review each migration against existing patterns to ensure compliance with project standards.",
    "schemaFile": {
        "filename": "frontend/packages/db/schema/schema.sql",
        "content": "\n\nSET statement_timeout = 0;\nSET lock_timeout = 0;\nSET idle_in_transaction_session_timeout = 0;\nSET client_encoding = 'UTF8';\nSET standard_conforming_strings = on;\nSELECT pg_catalog.set_config('search_path', '', false);\nSET check_function_bodies = false;\nSET xmloption = content;\nSET client_min_messages = warning;\nSET row_security = off;\n\n\nCREATE EXTENSION IF NOT EXISTS \"pg_net\" WITH SCHEMA \"extensions\";\n\n\n\n\n\n\nCOMMENT ON SCHEMA \"public\" IS 'standard public schema';\n\n\n\nCREATE EXTENSION IF NOT EXISTS \"pg_graphql\" WITH SCHEMA \"graphql\";\n\n\n\n\n\n\nCREATE EXTENSION IF NOT EXISTS \"pg_stat_statements\" WITH SCHEMA \"extensions\";\n\n\n\n\n\n\nCREATE EXTENSION IF NOT EXISTS \"pgcrypto\" WITH SCHEMA \"extensions\";\n\n\n\n\n\n\nCREATE EXTENSION IF NOT EXISTS \"pgjwt\" WITH SCHEMA \"extensions\";\n\n\n\n\n\n\nCREATE EXTENSION IF NOT EXISTS \"supabase_vault\" WITH SCHEMA \"vault\";\n\n\n\n\n\n\nCREATE EXTENSION IF NOT EXISTS \"uuid-ossp\" WITH SCHEMA \"extensions\";\n\n\n\n\n\n\nCREATE TYPE \"public\".\"CategoryEnum\" AS ENUM (\n    'MIGRATION_SAFETY',\n    'DATA_INTEGRITY',\n    'PERFORMANCE_IMPACT',\n    'PROJECT_RULES_CONSISTENCY',\n    'SECURITY_OR_SCALABILITY'\n);\n\n\nALTER TYPE \"public\".\"CategoryEnum\" OWNER TO \"postgres\";\n\n\nCREATE TYPE \"public\".\"KnowledgeType\" AS ENUM (\n    'SCHEMA',\n    'DOCS'\n);\n\n\nALTER TYPE \"public\".\"KnowledgeType\" OWNER TO \"postgres\";\n\n\nCREATE TYPE \"public\".\"SchemaFormatEnum\" AS ENUM (\n    'schemarb',\n    'postgres',\n    'prisma',\n    'tbls'\n);\n\n\nALTER TYPE \"public\".\"SchemaFormatEnum\" OWNER TO \"postgres\";\n\n\nCREATE TYPE \"public\".\"SeverityEnum\" AS ENUM (\n    'CRITICAL',\n    'WARNING',\n    'POSITIVE',\n    'QUESTION'\n);\n\n\nALTER TYPE \"public\".\"SeverityEnum\" OWNER TO \"postgres\";\n\n\nCREATE OR REPLACE FUNCTION \"public\".\"handle_new_user\"() RETURNS \"trigger\"\n    LANGUAGE \"plpgsql\" SECURITY DEFINER\n    SET \"search_path\" TO ''\n    AS $$\nBEGIN\n  INSERT INTO public.\"User\" (id, name, email)\n  VALUES (\n    NEW.id, \n    COALESCE(NEW.raw_user_meta_data->>'name', NEW.email),\n    NEW.email\n  );\n  RETURN NEW;\nEND;\n$$;\n\n\nALTER FUNCTION \"public\".\"handle_new_user\"() OWNER TO \"postgres\";\n\n\nCREATE OR REPLACE FUNCTION \"public\".\"sync_existing_users\"() RETURNS \"void\"\n    LANGUAGE \"plpgsql\" SECURITY DEFINER\n    AS $$\nBEGIN\n  INSERT INTO public.\"User\" (id, name, email)\n  SELECT \n    au.id,\n    COALESCE(au.raw_user_meta_data->>'name', au.email),\n    au.email\n  FROM auth.users au\n  LEFT JOIN public.\"User\" pu ON au.id = pu.id\n  WHERE pu.id IS NULL;\nEND;\n$$;\n\n\nALTER FUNCTION \"public\".\"sync_existing_users\"() OWNER TO \"postgres\";\n\nSET default_tablespace = '';\n\nSET default_table_access_method = \"heap\";\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"GitHubDocFilePath\" (\n    \"id\" integer NOT NULL,\n    \"path\" \"text\" NOT NULL,\n    \"isReviewEnabled\" boolean DEFAULT true NOT NULL,\n    \"projectId\" integer NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL\n);\n\n\nALTER TABLE \"public\".\"GitHubDocFilePath\" OWNER TO \"postgres\";\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"GitHubDocFilePath_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"GitHubDocFilePath_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"GitHubDocFilePath_id_seq\" OWNED BY \"public\".\"GitHubDocFilePath\".\"id\";\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"GitHubSchemaFilePath\" (\n    \"id\" integer NOT NULL,\n    \"path\" \"text\" NOT NULL,\n    \"projectId\" integer NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL,\n    \"format\" \"public\".\"SchemaFormatEnum\" NOT NULL\n);\n\n\nALTER TABLE \"public\".\"GitHubSchemaFilePath\" OWNER TO \"postgres\";\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"GitHubSchemaFilePath_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"GitHubSchemaFilePath_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"GitHubSchemaFilePath_id_seq\" OWNED BY \"public\".\"GitHubSchemaFilePath\".\"id\";\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"KnowledgeSuggestion\" (\n    \"id\" integer NOT NULL,\n    \"type\" \"public\".\"KnowledgeType\" NOT NULL,\n    \"title\" \"text\" NOT NULL,\n    \"path\" \"text\" NOT NULL,\n    \"content\" \"text\" NOT NULL,\n    \"fileSha\" \"text\",\n    \"projectId\" integer NOT NULL,\n    \"approvedAt\" timestamp(3) without time zone,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL,\n    \"branchName\" \"text\" NOT NULL,\n    \"traceId\" \"text\",\n    \"reasoning\" \"text\" DEFAULT ''::\"text\"\n);\n\n\nALTER TABLE \"public\".\"KnowledgeSuggestion\" OWNER TO \"postgres\";\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"KnowledgeSuggestionDocMapping\" (\n    \"id\" integer NOT NULL,\n    \"knowledgeSuggestionId\" integer NOT NULL,\n    \"gitHubDocFilePathId\" integer NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL\n);\n\n\nALTER TABLE \"public\".\"KnowledgeSuggestionDocMapping\" OWNER TO \"postgres\";\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"KnowledgeSuggestionDocMapping_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"KnowledgeSuggestionDocMapping_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"KnowledgeSuggestionDocMapping_id_seq\" OWNED BY \"public\".\"KnowledgeSuggestionDocMapping\".\"id\";\n\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"KnowledgeSuggestion_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"KnowledgeSuggestion_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"KnowledgeSuggestion_id_seq\" OWNED BY \"public\".\"KnowledgeSuggestion\".\"id\";\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"MembershipInvites\" (\n    \"id\" integer NOT NULL,\n    \"email\" \"text\" NOT NULL,\n    \"inviteByUserId\" \"uuid\" NOT NULL,\n    \"organizationId\" integer NOT NULL,\n    \"invitedAt\" timestamp with time zone DEFAULT CURRENT_TIMESTAMP\n);\n\n\nALTER TABLE \"public\".\"MembershipInvites\" OWNER TO \"postgres\";\n\n\nALTER TABLE \"public\".\"MembershipInvites\" ALTER COLUMN \"id\" ADD GENERATED ALWAYS AS IDENTITY (\n    SEQUENCE NAME \"public\".\"MembershipInvites_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1\n);\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"Migration\" (\n    \"id\" integer NOT NULL,\n    \"title\" \"text\" NOT NULL,\n    \"pullRequestId\" integer NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL\n);\n\n\nALTER TABLE \"public\".\"Migration\" OWNER TO \"postgres\";\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"Migration_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"Migration_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"Migration_id_seq\" OWNED BY \"public\".\"Migration\".\"id\";\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"Organization\" (\n    \"id\" integer NOT NULL,\n    \"name\" \"text\" NOT NULL\n);\n\n\nALTER TABLE \"public\".\"Organization\" OWNER TO \"postgres\";\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"OrganizationMember\" (\n    \"id\" integer NOT NULL,\n    \"userId\" \"uuid\" NOT NULL,\n    \"organizationId\" integer NOT NULL,\n    \"joinedAt\" timestamp with time zone DEFAULT CURRENT_TIMESTAMP\n);\n\n\nALTER TABLE \"public\".\"OrganizationMember\" OWNER TO \"postgres\";\n\n\nALTER TABLE \"public\".\"OrganizationMember\" ALTER COLUMN \"id\" ADD GENERATED ALWAYS AS IDENTITY (\n    SEQUENCE NAME \"public\".\"OrganizationMember_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1\n);\n\n\n\nALTER TABLE \"public\".\"Organization\" ALTER COLUMN \"id\" ADD GENERATED ALWAYS AS IDENTITY (\n    SEQUENCE NAME \"public\".\"Organization_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1\n);\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"OverallReview\" (\n    \"id\" integer NOT NULL,\n    \"projectId\" integer,\n    \"pullRequestId\" integer NOT NULL,\n    \"reviewComment\" \"text\",\n    \"reviewedAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL,\n    \"branchName\" \"text\" NOT NULL,\n    \"traceId\" \"text\"\n);\n\n\nALTER TABLE \"public\".\"OverallReview\" OWNER TO \"postgres\";\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"OverallReviewKnowledgeSuggestionMapping\" (\n    \"id\" integer NOT NULL,\n    \"overallReviewId\" integer NOT NULL,\n    \"knowledgeSuggestionId\" integer NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL\n);\n\n\nALTER TABLE \"public\".\"OverallReviewKnowledgeSuggestionMapping\" OWNER TO \"postgres\";\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"OverallReviewKnowledgeSuggestionMapping_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"OverallReviewKnowledgeSuggestionMapping_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"OverallReviewKnowledgeSuggestionMapping_id_seq\" OWNED BY \"public\".\"OverallReviewKnowledgeSuggestionMapping\".\"id\";\n\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"OverallReview_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"OverallReview_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"OverallReview_id_seq\" OWNED BY \"public\".\"OverallReview\".\"id\";\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"Project\" (\n    \"id\" integer NOT NULL,\n    \"name\" \"text\" NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL,\n    \"organizationId\" integer\n);\n\n\nALTER TABLE \"public\".\"Project\" OWNER TO \"postgres\";\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"ProjectRepositoryMapping\" (\n    \"id\" integer NOT NULL,\n    \"projectId\" integer NOT NULL,\n    \"repositoryId\" integer NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL\n);\n\n\nALTER TABLE \"public\".\"ProjectRepositoryMapping\" OWNER TO \"postgres\";\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"ProjectRepositoryMapping_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"ProjectRepositoryMapping_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"ProjectRepositoryMapping_id_seq\" OWNED BY \"public\".\"ProjectRepositoryMapping\".\"id\";\n\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"Project_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"Project_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"Project_id_seq\" OWNED BY \"public\".\"Project\".\"id\";\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"PullRequest\" (\n    \"id\" integer NOT NULL,\n    \"pullNumber\" bigint NOT NULL,\n    \"commentId\" bigint,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL,\n    \"repositoryId\" integer NOT NULL\n);\n\n\nALTER TABLE \"public\".\"PullRequest\" OWNER TO \"postgres\";\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"PullRequest_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"PullRequest_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"PullRequest_id_seq\" OWNED BY \"public\".\"PullRequest\".\"id\";\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"Repository\" (\n    \"id\" integer NOT NULL,\n    \"name\" \"text\" NOT NULL,\n    \"owner\" \"text\" NOT NULL,\n    \"installationId\" bigint NOT NULL,\n    \"isActive\" boolean DEFAULT true NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL\n);\n\n\nALTER TABLE \"public\".\"Repository\" OWNER TO \"postgres\";\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"Repository_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"Repository_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"Repository_id_seq\" OWNED BY \"public\".\"Repository\".\"id\";\n\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"ReviewIssue\" (\n    \"id\" integer NOT NULL,\n    \"overallReviewId\" integer NOT NULL,\n    \"category\" \"public\".\"CategoryEnum\" NOT NULL,\n    \"severity\" \"public\".\"SeverityEnum\" NOT NULL,\n    \"description\" \"text\" NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL,\n    \"suggestion\" \"text\" NOT NULL,\n    \"resolvedAt\" timestamp(3) without time zone,\n    \"resolutionComment\" \"text\"\n);\n\n\nALTER TABLE \"public\".\"ReviewIssue\" OWNER TO \"postgres\";\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"ReviewIssue_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"ReviewIssue_id_seq\" OWNER TO \"postgres\";\n\n\nALTER SEQUENCE \"public\".\"ReviewIssue_id_seq\" OWNED BY \"public\".\"ReviewIssue\".\"id\";\n\n\n\nCREATE SEQUENCE IF NOT EXISTS \"public\".\"ReviewSuggestionSnippet_id_seq\"\n    START WITH 1\n    INCREMENT BY 1\n    NO MINVALUE\n    NO MAXVALUE\n    CACHE 1;\n\n\nALTER TABLE \"public\".\"ReviewSuggestionSnippet_id_seq\" OWNER TO \"postgres\";\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"ReviewSuggestionSnippet\" (\n    \"id\" integer DEFAULT \"nextval\"('\"public\".\"ReviewSuggestionSnippet_id_seq\"'::\"regclass\") NOT NULL,\n    \"reviewIssueId\" integer NOT NULL,\n    \"filename\" \"text\" NOT NULL,\n    \"snippet\" \"text\" NOT NULL,\n    \"createdAt\" timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,\n    \"updatedAt\" timestamp(3) without time zone NOT NULL\n);\n\n\nALTER TABLE \"public\".\"ReviewSuggestionSnippet\" OWNER TO \"postgres\";\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"User\" (\n    \"id\" \"uuid\" NOT NULL,\n    \"name\" \"text\" NOT NULL,\n    \"email\" \"text\" NOT NULL\n);\n\n\nALTER TABLE \"public\".\"User\" OWNER TO \"postgres\";\n\n\nCREATE TABLE IF NOT EXISTS \"public\".\"_prisma_migrations\" (\n    \"id\" character varying(36) NOT NULL,\n    \"checksum\" character varying(64) NOT NULL,\n    \"finished_at\" timestamp with time zone,\n    \"migration_name\" character varying(255) NOT NULL,\n    \"logs\" \"text\",\n    \"rolled_back_at\" timestamp with time zone,\n    \"started_at\" timestamp with time zone DEFAULT \"now\"() NOT NULL,\n    \"applied_steps_count\" integer DEFAULT 0 NOT NULL\n);\n\n\nALTER TABLE \"public\".\"_prisma_migrations\" OWNER TO \"postgres\";\n\n\nALTER TABLE ONLY \"public\".\"GitHubDocFilePath\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"GitHubDocFilePath_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"GitHubSchemaFilePath\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"GitHubSchemaFilePath_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"KnowledgeSuggestion\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"KnowledgeSuggestion_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"KnowledgeSuggestionDocMapping\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"KnowledgeSuggestionDocMapping_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"Migration\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"Migration_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"OverallReview\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"OverallReview_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"OverallReviewKnowledgeSuggestionMapping\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"OverallReviewKnowledgeSuggestionMapping_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"Project\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"Project_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"ProjectRepositoryMapping\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"ProjectRepositoryMapping_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"PullRequest\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"PullRequest_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"Repository\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"Repository_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"ReviewIssue\" ALTER COLUMN \"id\" SET DEFAULT \"nextval\"('\"public\".\"ReviewIssue_id_seq\"'::\"regclass\");\n\n\n\nALTER TABLE ONLY \"public\".\"GitHubDocFilePath\"\n    ADD CONSTRAINT \"GitHubDocFilePath_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"GitHubSchemaFilePath\"\n    ADD CONSTRAINT \"GitHubSchemaFilePath_path_projectId_key\" UNIQUE (\"path\", \"projectId\");\n\n\n\nALTER TABLE ONLY \"public\".\"GitHubSchemaFilePath\"\n    ADD CONSTRAINT \"GitHubSchemaFilePath_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"KnowledgeSuggestionDocMapping\"\n    ADD CONSTRAINT \"KnowledgeSuggestionDocMapping_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"KnowledgeSuggestion\"\n    ADD CONSTRAINT \"KnowledgeSuggestion_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"MembershipInvites\"\n    ADD CONSTRAINT \"MembershipInvites_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"Migration\"\n    ADD CONSTRAINT \"Migration_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"OrganizationMember\"\n    ADD CONSTRAINT \"OrganizationMember_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"OrganizationMember\"\n    ADD CONSTRAINT \"OrganizationMember_userId_organizationId_key\" UNIQUE (\"userId\", \"organizationId\");\n\n\n\nALTER TABLE ONLY \"public\".\"Organization\"\n    ADD CONSTRAINT \"Organization_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"OverallReviewKnowledgeSuggestionMapping\"\n    ADD CONSTRAINT \"OverallReviewKnowledgeSuggestionMapping_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"OverallReview\"\n    ADD CONSTRAINT \"OverallReview_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"ProjectRepositoryMapping\"\n    ADD CONSTRAINT \"ProjectRepositoryMapping_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"Project\"\n    ADD CONSTRAINT \"Project_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"PullRequest\"\n    ADD CONSTRAINT \"PullRequest_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"Repository\"\n    ADD CONSTRAINT \"Repository_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"ReviewIssue\"\n    ADD CONSTRAINT \"ReviewIssue_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"ReviewSuggestionSnippet\"\n    ADD CONSTRAINT \"ReviewSuggestionSnippet_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"User\"\n    ADD CONSTRAINT \"User_email_key\" UNIQUE (\"email\");\n\n\n\nALTER TABLE ONLY \"public\".\"User\"\n    ADD CONSTRAINT \"User_pkey\" PRIMARY KEY (\"id\");\n\n\n\nALTER TABLE ONLY \"public\".\"_prisma_migrations\"\n    ADD CONSTRAINT \"_prisma_migrations_pkey\" PRIMARY KEY (\"id\");\n\n\n\nCREATE UNIQUE INDEX \"GitHubDocFilePath_path_projectId_key\" ON \"public\".\"GitHubDocFilePath\" USING \"btree\" (\"path\", \"projectId\");\n\n\n\nCREATE UNIQUE INDEX \"GitHubSchemaFilePath_projectId_key\" ON \"public\".\"GitHubSchemaFilePath\" USING \"btree\" (\"projectId\");\n\n\n\nCREATE UNIQUE INDEX \"KnowledgeSuggestionDocMapping_unique_mapping\" ON \"public\".\"KnowledgeSuggestionDocMapping\" USING \"btree\" (\"knowledgeSuggestionId\", \"gitHubDocFilePathId\");\n\n\n\nCREATE UNIQUE INDEX \"Migration_pullRequestId_key\" ON \"public\".\"Migration\" USING \"btree\" (\"pullRequestId\");\n\n\n\nCREATE UNIQUE INDEX \"OverallReviewKnowledgeSuggestionMapping_unique_mapping\" ON \"public\".\"OverallReviewKnowledgeSuggestionMapping\" USING \"btree\" (\"overallReviewId\", \"knowledgeSuggestionId\");\n\n\n\nCREATE UNIQUE INDEX \"ProjectRepositoryMapping_projectId_repositoryId_key\" ON \"public\".\"ProjectRepositoryMapping\" USING \"btree\" (\"projectId\", \"repositoryId\");\n\n\n\nCREATE UNIQUE INDEX \"PullRequest_repositoryId_pullNumber_key\" ON \"public\".\"PullRequest\" USING \"btree\" (\"repositoryId\", \"pullNumber\");\n\n\n\nCREATE UNIQUE INDEX \"Repository_owner_name_key\" ON \"public\".\"Repository\" USING \"btree\" (\"owner\", \"name\");\n\n\n\nCREATE INDEX \"idx_project_organizationId\" ON \"public\".\"Project\" USING \"btree\" (\"organizationId\");\n\n\n\nCREATE INDEX \"membership_invites_email_idx\" ON \"public\".\"MembershipInvites\" USING \"btree\" (\"email\");\n\n\n\nCREATE INDEX \"membership_invites_orgId_idx\" ON \"public\".\"MembershipInvites\" USING \"btree\" (\"organizationId\");\n\n\n\nCREATE INDEX \"organization_member_organizationId_idx\" ON \"public\".\"OrganizationMember\" USING \"btree\" (\"organizationId\");\n\n\n\nCREATE INDEX \"organization_member_userId_idx\" ON \"public\".\"OrganizationMember\" USING \"btree\" (\"userId\");\n\n\n\nALTER TABLE ONLY \"public\".\"GitHubDocFilePath\"\n    ADD CONSTRAINT \"GitHubDocFilePath_projectId_fkey\" FOREIGN KEY (\"projectId\") REFERENCES \"public\".\"Project\"(\"id\") ON UPDATE CASCADE ON DELETE RESTRICT;\n\n\n\nALTER TABLE ONLY \"public\".\"GitHubSchemaFilePath\"\n    ADD CONSTRAINT \"GitHubSchemaFilePath_projectId_fkey\" FOREIGN KEY (\"projectId\") REFERENCES \"public\".\"Project\"(\"id\") ON UPDATE CASCADE ON DELETE RESTRICT;\n\n\n\nALTER TABLE ONLY \"public\".\"KnowledgeSuggestionDocMapping\"\n    ADD CONSTRAINT \"KnowledgeSuggestionDocMapping_gitHubDocFilePathId_fkey\" FOREIGN KEY (\"gitHubDocFilePathId\") REFERENCES \"public\".\"GitHubDocFilePath\"(\"id\") ON UPDATE CASCADE ON DELETE CASCADE;\n\n\n\nALTER TABLE ONLY \"public\".\"KnowledgeSuggestionDocMapping\"\n    ADD CONSTRAINT \"KnowledgeSuggestionDocMapping_knowledgeSuggestionId_fkey\" FOREIGN KEY (\"knowledgeSuggestionId\") REFERENCES \"public\".\"KnowledgeSuggestion\"(\"id\") ON UPDATE CASCADE ON DELETE CASCADE;\n\n\n\nALTER TABLE ONLY \"public\".\"KnowledgeSuggestion\"\n    ADD CONSTRAINT \"KnowledgeSuggestion_projectId_fkey\" FOREIGN KEY (\"projectId\") REFERENCES \"public\".\"Project\"(\"id\") ON UPDATE CASCADE ON DELETE RESTRICT;\n\n\n\nALTER TABLE ONLY \"public\".\"MembershipInvites\"\n    ADD CONSTRAINT \"MembershipInvites_inviteByUserId_fkey\" FOREIGN KEY (\"inviteByUserId\") REFERENCES \"public\".\"User\"(\"id\") ON DELETE CASCADE;\n\n\n\nALTER TABLE ONLY \"public\".\"MembershipInvites\"\n    ADD CONSTRAINT \"MembershipInvites_organizationId_fkey\" FOREIGN KEY (\"organizationId\") REFERENCES \"public\".\"Organization\"(\"id\") ON DELETE CASCADE;\n\n\n\nALTER TABLE ONLY \"public\".\"Migration\"\n    ADD CONSTRAINT \"Migration_pullRequestId_fkey\" FOREIGN KEY (\"pullRequestId\") REFERENCES \"public\".\"PullRequest\"(\"id\") ON UPDATE CASCADE ON DELETE RESTRICT;\n\n\n\nALTER TABLE ONLY \"public\".\"OrganizationMember\"\n    ADD CONSTRAINT \"OrganizationMember_organizationId_fkey\" FOREIGN KEY (\"organizationId\") REFERENCES \"public\".\"Organization\"(\"id\") ON DELETE CASCADE;\n\n\n\nALTER TABLE ONLY \"public\".\"OrganizationMember\"\n    ADD CONSTRAINT \"OrganizationMember_userId_fkey\" FOREIGN KEY (\"userId\") REFERENCES \"public\".\"User\"(\"id\") ON DELETE CASCADE;\n\n\n\nALTER TABLE ONLY \"public\".\"OverallReviewKnowledgeSuggestionMapping\"\n    ADD CONSTRAINT \"OverallReviewKnowledgeSuggestionMapping_knowledgeSuggestionId_f\" FOREIGN KEY (\"knowledgeSuggestionId\") REFERENCES \"public\".\"KnowledgeSuggestion\"(\"id\") ON UPDATE CASCADE ON DELETE CASCADE;\n\n\n\nALTER TABLE ONLY \"public\".\"OverallReviewKnowledgeSuggestionMapping\"\n    ADD CONSTRAINT \"OverallReviewKnowledgeSuggestionMapping_overallReviewId_fkey\" FOREIGN KEY (\"overallReviewId\") REFERENCES \"public\".\"OverallReview\"(\"id\") ON UPDATE CASCADE ON DELETE CASCADE;\n\n\n\nALTER TABLE ONLY \"public\".\"OverallReview\"\n    ADD CONSTRAINT \"OverallReview_projectId_fkey\" FOREIGN KEY (\"projectId\") REFERENCES \"public\".\"Project\"(\"id\") ON UPDATE CASCADE ON DELETE SET NULL;\n\n\n\nALTER TABLE ONLY \"public\".\"OverallReview\"\n    ADD CONSTRAINT \"OverallReview_pullRequestId_fkey\" FOREIGN KEY (\"pullRequestId\") REFERENCES \"public\".\"PullRequest\"(\"id\") ON UPDATE CASCADE ON DELETE RESTRICT;\n\n\n\nALTER TABLE ONLY \"public\".\"ProjectRepositoryMapping\"\n    ADD CONSTRAINT \"ProjectRepositoryMapping_projectId_fkey\" FOREIGN KEY (\"projectId\") REFERENCES \"public\".\"Project\"(\"id\") ON UPDATE CASCADE ON DELETE RESTRICT;\n\n\n\nALTER TABLE ONLY \"public\".\"ProjectRepositoryMapping\"\n    ADD CONSTRAINT \"ProjectRepositoryMapping_repositoryId_fkey\" FOREIGN KEY (\"repositoryId\") REFERENCES \"public\".\"Repository\"(\"id\") ON UPDATE CASCADE ON DELETE RESTRICT;\n\n\n\nALTER TABLE ONLY \"public\".\"Project\"\n    ADD CONSTRAINT \"Project_organizationId_fkey\" FOREIGN KEY (\"organizationId\") REFERENCES \"public\".\"Organization\"(\"id\") ON UPDATE CASCADE ON DELETE CASCADE;\n\n\n\nALTER TABLE ONLY \"public\".\"PullRequest\"\n    ADD CONSTRAINT \"PullRequest_repositoryId_fkey\" FOREIGN KEY (\"repositoryId\") REFERENCES \"public\".\"Repository\"(\"id\") ON UPDATE CASCADE ON DELETE RESTRICT;\n\n\n\nALTER TABLE ONLY \"public\".\"ReviewIssue\"\n    ADD CONSTRAINT \"ReviewIssue_overallReviewId_fkey\" FOREIGN KEY (\"overallReviewId\") REFERENCES \"public\".\"OverallReview\"(\"id\") ON UPDATE CASCADE ON DELETE RESTRICT;\n\n\n\nALTER TABLE ONLY \"public\".\"ReviewSuggestionSnippet\"\n    ADD CONSTRAINT \"ReviewSuggestionSnippet_reviewIssueId_fkey\" FOREIGN KEY (\"reviewIssueId\") REFERENCES \"public\".\"ReviewIssue\"(\"id\") ON UPDATE CASCADE ON DELETE CASCADE;\n\n\n\nALTER TABLE \"public\".\"Project\" ENABLE ROW LEVEL SECURITY;\n\n\nCREATE POLICY \"authenticated_users_can_delete_org_projects\" ON \"public\".\"Project\" FOR DELETE TO \"authenticated\" USING ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n   FROM \"public\".\"OrganizationMember\"\n  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"()))));\n\n\n\nCOMMENT ON POLICY \"authenticated_users_can_delete_org_projects\" ON \"public\".\"Project\" IS 'Authenticated users can only delete projects in organizations they are members of';\n\n\n\nCREATE POLICY \"authenticated_users_can_insert_projects\" ON \"public\".\"Project\" FOR INSERT TO \"authenticated\" WITH CHECK ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n   FROM \"public\".\"OrganizationMember\"\n  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"()))));\n\n\n\nCOMMENT ON POLICY \"authenticated_users_can_insert_projects\" ON \"public\".\"Project\" IS 'Authenticated users can create any project';\n\n\n\nCREATE POLICY \"authenticated_users_can_select_org_projects\" ON \"public\".\"Project\" FOR SELECT TO \"authenticated\" USING ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n   FROM \"public\".\"OrganizationMember\"\n  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"()))));\n\n\n\nCOMMENT ON POLICY \"authenticated_users_can_select_org_projects\" ON \"public\".\"Project\" IS 'Authenticated users can only view projects belonging to organizations they are members of';\n\n\n\nCREATE POLICY \"authenticated_users_can_update_org_projects\" ON \"public\".\"Project\" FOR UPDATE TO \"authenticated\" USING ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n   FROM \"public\".\"OrganizationMember\"\n  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"())))) WITH CHECK ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n   FROM \"public\".\"OrganizationMember\"\n  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"()))));\n\n\n\nCOMMENT ON POLICY \"authenticated_users_can_update_org_projects\" ON \"public\".\"Project\" IS 'Authenticated users can only update projects in organizations they are members of';\n\n\n\nCREATE POLICY \"service_role_can_delete_all_projects\" ON \"public\".\"Project\" FOR DELETE TO \"service_role\" USING (true);\n\n\n\nCOMMENT ON POLICY \"service_role_can_delete_all_projects\" ON \"public\".\"Project\" IS 'Service role can delete any project (for jobs)';\n\n\n\nCREATE POLICY \"service_role_can_insert_all_projects\" ON \"public\".\"Project\" FOR INSERT TO \"service_role\" WITH CHECK (true);\n\n\n\nCOMMENT ON POLICY \"service_role_can_insert_all_projects\" ON \"public\".\"Project\" IS 'Service role can create any project (for jobs)';\n\n\n\nCREATE POLICY \"service_role_can_select_all_projects\" ON \"public\".\"Project\" FOR SELECT TO \"service_role\" USING (true);\n\n\n\nCOMMENT ON POLICY \"service_role_can_select_all_projects\" ON \"public\".\"Project\" IS 'Service role can view all projects (for jobs)';\n\n\n\nCREATE POLICY \"service_role_can_update_all_projects\" ON \"public\".\"Project\" FOR UPDATE TO \"service_role\" USING (true) WITH CHECK (true);\n\n\n\nCOMMENT ON POLICY \"service_role_can_update_all_projects\" ON \"public\".\"Project\" IS 'Service role can update any project (for jobs)';\n\n\n\n\n\nALTER PUBLICATION \"supabase_realtime\" OWNER TO \"postgres\";\n\n\n\n\n\nGRANT USAGE ON SCHEMA \"public\" TO \"postgres\";\nGRANT USAGE ON SCHEMA \"public\" TO \"anon\";\nGRANT USAGE ON SCHEMA \"public\" TO \"authenticated\";\nGRANT USAGE ON SCHEMA \"public\" TO \"service_role\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGRANT ALL ON FUNCTION \"public\".\"handle_new_user\"() TO \"anon\";\nGRANT ALL ON FUNCTION \"public\".\"handle_new_user\"() TO \"authenticated\";\nGRANT ALL ON FUNCTION \"public\".\"handle_new_user\"() TO \"service_role\";\n\n\n\nGRANT ALL ON FUNCTION \"public\".\"sync_existing_users\"() TO \"anon\";\nGRANT ALL ON FUNCTION \"public\".\"sync_existing_users\"() TO \"authenticated\";\nGRANT ALL ON FUNCTION \"public\".\"sync_existing_users\"() TO \"service_role\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGRANT ALL ON TABLE \"public\".\"GitHubDocFilePath\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"GitHubDocFilePath\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"GitHubDocFilePath\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"GitHubDocFilePath_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"GitHubDocFilePath_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"GitHubDocFilePath_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"GitHubSchemaFilePath\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"GitHubSchemaFilePath\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"GitHubSchemaFilePath\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"GitHubSchemaFilePath_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"GitHubSchemaFilePath_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"GitHubSchemaFilePath_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"KnowledgeSuggestion\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"KnowledgeSuggestion\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"KnowledgeSuggestion\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"KnowledgeSuggestionDocMapping\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"KnowledgeSuggestionDocMapping\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"KnowledgeSuggestionDocMapping\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"KnowledgeSuggestionDocMapping_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"KnowledgeSuggestionDocMapping_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"KnowledgeSuggestionDocMapping_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"KnowledgeSuggestion_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"KnowledgeSuggestion_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"KnowledgeSuggestion_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"MembershipInvites\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"MembershipInvites\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"MembershipInvites\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"MembershipInvites_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"MembershipInvites_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"MembershipInvites_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"Migration\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"Migration\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"Migration\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"Migration_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"Migration_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"Migration_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"Organization\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"Organization\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"Organization\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"OrganizationMember\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"OrganizationMember\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"OrganizationMember\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"OrganizationMember_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"OrganizationMember_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"OrganizationMember_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"Organization_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"Organization_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"Organization_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"OverallReview\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"OverallReview\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"OverallReview\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"OverallReviewKnowledgeSuggestionMapping\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"OverallReviewKnowledgeSuggestionMapping\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"OverallReviewKnowledgeSuggestionMapping\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"OverallReviewKnowledgeSuggestionMapping_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"OverallReviewKnowledgeSuggestionMapping_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"OverallReviewKnowledgeSuggestionMapping_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"OverallReview_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"OverallReview_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"OverallReview_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"Project\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"Project\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"Project\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"ProjectRepositoryMapping\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"ProjectRepositoryMapping\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"ProjectRepositoryMapping\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"ProjectRepositoryMapping_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"ProjectRepositoryMapping_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"ProjectRepositoryMapping_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"Project_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"Project_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"Project_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"PullRequest\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"PullRequest\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"PullRequest\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"PullRequest_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"PullRequest_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"PullRequest_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"Repository\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"Repository\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"Repository\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"Repository_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"Repository_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"Repository_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"ReviewIssue\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"ReviewIssue\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"ReviewIssue\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"ReviewIssue_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"ReviewIssue_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"ReviewIssue_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON SEQUENCE \"public\".\"ReviewSuggestionSnippet_id_seq\" TO \"anon\";\nGRANT ALL ON SEQUENCE \"public\".\"ReviewSuggestionSnippet_id_seq\" TO \"authenticated\";\nGRANT ALL ON SEQUENCE \"public\".\"ReviewSuggestionSnippet_id_seq\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"ReviewSuggestionSnippet\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"ReviewSuggestionSnippet\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"ReviewSuggestionSnippet\" TO \"service_role\";\n\n\n\nGRANT ALL ON TABLE \"public\".\"User\" TO \"anon\";\nGRANT ALL ON TABLE \"public\".\"User\" TO \"authenticated\";\nGRANT ALL ON TABLE \"public\".\"User\" TO \"service_role\";\n\n\n\n\n\n\n\n\n\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"postgres\";\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"anon\";\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"authenticated\";\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"service_role\";\n\n\n\n\n\n\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON FUNCTIONS  TO \"postgres\";\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON FUNCTIONS  TO \"anon\";\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON FUNCTIONS  TO \"authenticated\";\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON FUNCTIONS  TO \"service_role\";\n\n\n\n\n\n\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON TABLES  TO \"postgres\";\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON TABLES  TO \"anon\";\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON TABLES  TO \"authenticated\";\nALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON TABLES  TO \"service_role\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRESET ALL;\n"
    },
    "fileChanges": [
        {
            "filename": ".env.template",
            "status": "modified",
            "changes": 1,
            "patch": "@@ -21,3 +21,4 @@ SENTRY_ORG=\"\"\n SENTRY_PROJECT=\"\"\n TRIGGER_PROJECT_ID=\"\"\n TRIGGER_SECRET_KEY=\"\"\n+SUPABASE_SERVICE_ROLE_KEY=\"\""
        },
        {
            "filename": ".github/workflows/frontend-ci.yml",
            "status": "modified",
            "changes": 3,
            "patch": "@@ -56,7 +56,10 @@ jobs:\n       - uses: ./.github/actions/pnpm-setup\n       - run: pnpm --filter @liam-hq/db supabase:start\n       - run: cp .env.template .env\n+      - name: Make scripts executable\n+        run: chmod +x ./scripts/extract-supabase-anon-key.sh ./scripts/extract-supabase-service-key.sh\n       - run: ./scripts/extract-supabase-anon-key.sh\n+      - run: ./scripts/extract-supabase-service-key.sh\n       - run: pnpm test:turbo\n       - run: pnpm --filter @liam-hq/db supabase:gen\n       - name: Check for diff in generated types and schema.sql"
        },
        {
            "filename": "frontend/apps/app/app/(app)/app/organizations/[organizationId]/projects/new/page.tsx",
            "status": "modified",
            "changes": 1,
            "patch": "@@ -27,7 +27,6 @@ export default async function NewProjectPage({ params }: PageProps) {\n     .select('id')\n     .eq('userId', data.session.user.id)\n     .eq('organizationId', Number.parseInt(organizationId, 10))\n-    .eq('status', 'ACTIVE')\n     .limit(1)\n \n   if (orgError) {"
        },
        {
            "filename": "frontend/apps/app/app/(app)/app/organizations/[organizationId]/projects/page.tsx",
            "status": "modified",
            "changes": 1,
            "patch": "@@ -33,7 +33,6 @@ export default async function Page({ params }: PageProps) {\n     .select('id')\n     .eq('userId', data.session.user.id)\n     .eq('organizationId', Number.parseInt(organizationId, 10))\n-    .eq('status', 'ACTIVE')\n     .limit(1)\n \n   if (orgError) {"
        },
        {
            "filename": "frontend/apps/app/app/(app)/app/page.tsx",
            "status": "modified",
            "changes": 1,
            "patch": "@@ -14,7 +14,6 @@ export default async function Page() {\n     .from('OrganizationMember')\n     .select('organizationId')\n     .eq('userId', data.user.id)\n-    .eq('status', 'ACTIVE')\n     .limit(1)\n \n   if (orgError) {"
        },
        {
            "filename": "frontend/apps/app/app/(app)/app/projects/[projectId]/ref/[branchOrCommit]/docs/[...docFilePath]/getProjectRepository.test.ts",
            "status": "modified",
            "changes": 2,
            "patch": "@@ -3,7 +3,7 @@ import { describe, expect, it, vi } from 'vitest'\n import { getProjectRepository } from './getProjectRepository'\n \n describe('getProjectRepository', () => {\n-  it('should return repository information with the correct structure', async () => {\n+  it.skip('should return repository information with the correct structure', async () => {\n     const supabase = await createClient()\n \n     // Create test repository"
        },
        {
            "filename": "frontend/apps/app/app/(app)/app/projects/[projectId]/ref/[branchOrCommit]/docs/getGitHubDocFilePaths.test.ts",
            "status": "modified",
            "changes": 2,
            "patch": "@@ -3,7 +3,7 @@ import { describe, expect, it } from 'vitest'\n import { getGitHubDocFilePaths } from './getGitHubDocFilePaths'\n \n describe('getGitHubDocFilePaths', () => {\n-  it('should return doc file paths with correct structure', async () => {\n+  it.skip('should return doc file paths with correct structure', async () => {\n     const supabase = await createClient()\n \n     // Create test project"
        },
        {
            "filename": "frontend/apps/app/app/api/webhook/github/utils/__tests__/checkSchemaChanges.test.ts",
            "status": "modified",
            "changes": 2,
            "patch": "@@ -70,7 +70,7 @@ describe('checkSchemaChanges', () => {\n     expect(result).toEqual({ shouldContinue: false })\n   })\n \n-  it('should return true if schema file changes are detected', async () => {\n+  it.skip('should return true if schema file changes are detected', async () => {\n     // Get the Supabase client\n     const { createClient } = await import('@/libs/db/server')\n     const supabase = await createClient()"
        },
        {
            "filename": "frontend/apps/app/features/organizations/pages/OrganizationNewPage/OrganizationNewPage.tsx",
            "status": "modified",
            "changes": 1,
            "patch": "@@ -33,7 +33,6 @@ export const OrganizationNewPage: FC = () => {\n     const { error } = await supabase.from('OrganizationMember').insert({\n       userId,\n       organizationId,\n-      status: 'ACTIVE',\n     })\n \n     if (error) throw error"
        },
        {
            "filename": "frontend/apps/app/features/organizations/pages/OrganizationsPage/getOrganizations.ts",
            "status": "modified",
            "changes": 1,
            "patch": "@@ -18,7 +18,6 @@ export const getOrganizations = async () => {\n       )\n     `)\n     .eq('userId', userData.user.id)\n-    .eq('status', 'ACTIVE')\n \n   if (error) {\n     console.error('Error fetching organizations:', error)"
        },
        {
            "filename": "frontend/apps/app/features/projects/pages/ProjectsPage/getCurrentOrganization.ts",
            "status": "modified",
            "changes": 2,
            "patch": "@@ -20,7 +20,6 @@ export const getCurrentOrganization = async (\n       )\n     `)\n     .eq('userId', userData.user.id)\n-    .eq('status', 'ACTIVE')\n \n   if (specificOrganizationId) {\n     query = query.eq('organizationId', specificOrganizationId)\n@@ -58,7 +57,6 @@ export const getUserOrganizations = async () => {\n       )\n     `)\n     .eq('userId', userData.user.id)\n-    .eq('status', 'ACTIVE')\n \n   if (error) {\n     console.error('Error fetching organizations:', error)"
        },
        {
            "filename": "frontend/apps/app/features/projects/pages/ProjectsPage/getProjects.test.ts",
            "status": "modified",
            "changes": 2,
            "patch": "@@ -3,7 +3,7 @@ import { describe, expect, it, vi } from 'vitest'\n import { getProjects } from './getProjects'\n \n describe('getProjects', () => {\n-  it('should return projects with the correct structure', async () => {\n+  it.skip('should return projects with the correct structure', async () => {\n     const supabase = await createClient()\n     await supabase.from('Project').insert({\n       name: 'Test Project',"
        },
        {
            "filename": "frontend/packages/db/schema/schema.sql",
            "status": "modified",
            "changes": 77,
            "patch": "@@ -915,6 +915,83 @@ ALTER TABLE ONLY \"public\".\"ReviewSuggestionSnippet\"\n \n \n \n+ALTER TABLE \"public\".\"Project\" ENABLE ROW LEVEL SECURITY;\n+\n+\n+CREATE POLICY \"authenticated_users_can_delete_org_projects\" ON \"public\".\"Project\" FOR DELETE TO \"authenticated\" USING ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n+   FROM \"public\".\"OrganizationMember\"\n+  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"()))));\n+\n+\n+\n+COMMENT ON POLICY \"authenticated_users_can_delete_org_projects\" ON \"public\".\"Project\" IS 'Authenticated users can only delete projects in organizations they are members of';\n+\n+\n+\n+CREATE POLICY \"authenticated_users_can_insert_projects\" ON \"public\".\"Project\" FOR INSERT TO \"authenticated\" WITH CHECK ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n+   FROM \"public\".\"OrganizationMember\"\n+  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"()))));\n+\n+\n+\n+COMMENT ON POLICY \"authenticated_users_can_insert_projects\" ON \"public\".\"Project\" IS 'Authenticated users can create any project';\n+\n+\n+\n+CREATE POLICY \"authenticated_users_can_select_org_projects\" ON \"public\".\"Project\" FOR SELECT TO \"authenticated\" USING ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n+   FROM \"public\".\"OrganizationMember\"\n+  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"()))));\n+\n+\n+\n+COMMENT ON POLICY \"authenticated_users_can_select_org_projects\" ON \"public\".\"Project\" IS 'Authenticated users can only view projects belonging to organizations they are members of';\n+\n+\n+\n+CREATE POLICY \"authenticated_users_can_update_org_projects\" ON \"public\".\"Project\" FOR UPDATE TO \"authenticated\" USING ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n+   FROM \"public\".\"OrganizationMember\"\n+  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"())))) WITH CHECK ((\"organizationId\" IN ( SELECT \"OrganizationMember\".\"organizationId\"\n+   FROM \"public\".\"OrganizationMember\"\n+  WHERE (\"OrganizationMember\".\"userId\" = \"auth\".\"uid\"()))));\n+\n+\n+\n+COMMENT ON POLICY \"authenticated_users_can_update_org_projects\" ON \"public\".\"Project\" IS 'Authenticated users can only update projects in organizations they are members of';\n+\n+\n+\n+CREATE POLICY \"service_role_can_delete_all_projects\" ON \"public\".\"Project\" FOR DELETE TO \"service_role\" USING (true);\n+\n+\n+\n+COMMENT ON POLICY \"service_role_can_delete_all_projects\" ON \"public\".\"Project\" IS 'Service role can delete any project (for jobs)';\n+\n+\n+\n+CREATE POLICY \"service_role_can_insert_all_projects\" ON \"public\".\"Project\" FOR INSERT TO \"service_role\" WITH CHECK (true);\n+\n+\n+\n+COMMENT ON POLICY \"service_role_can_insert_all_projects\" ON \"public\".\"Project\" IS 'Service role can create any project (for jobs)';\n+\n+\n+\n+CREATE POLICY \"service_role_can_select_all_projects\" ON \"public\".\"Project\" FOR SELECT TO \"service_role\" USING (true);\n+\n+\n+\n+COMMENT ON POLICY \"service_role_can_select_all_projects\" ON \"public\".\"Project\" IS 'Service role can view all projects (for jobs)';\n+\n+\n+\n+CREATE POLICY \"service_role_can_update_all_projects\" ON \"public\".\"Project\" FOR UPDATE TO \"service_role\" USING (true) WITH CHECK (true);\n+\n+\n+\n+COMMENT ON POLICY \"service_role_can_update_all_projects\" ON \"public\".\"Project\" IS 'Service role can update any project (for jobs)';\n+\n+\n+\n \n \n ALTER PUBLICATION \"supabase_realtime\" OWNER TO \"postgres\";"
        },
        {
            "filename": "frontend/packages/db/supabase/migrations/20250410121418_add_project_table_rls.sql",
            "status": "added",
            "changes": 82,
            "patch": "@@ -0,0 +1,82 @@\n+ALTER TABLE \"public\".\"Project\" ENABLE ROW LEVEL SECURITY;\n+\n+CREATE POLICY \"authenticated_users_can_select_org_projects\" ON \"public\".\"Project\"\n+FOR SELECT\n+TO authenticated\n+USING (\n+  \"organizationId\" IN (\n+    SELECT \"organizationId\" \n+    FROM \"public\".\"OrganizationMember\" \n+    WHERE \"userId\" = auth.uid()\n+  )\n+);\n+\n+CREATE POLICY \"authenticated_users_can_insert_projects\" ON \"public\".\"Project\"\n+FOR INSERT\n+TO authenticated\n+WITH CHECK (\n+  \"organizationId\" IN (\n+    SELECT \"organizationId\" \n+    FROM \"public\".\"OrganizationMember\" \n+    WHERE \"userId\" = auth.uid()\n+  )\n+);\n+\n+CREATE POLICY \"authenticated_users_can_update_org_projects\" ON \"public\".\"Project\"\n+FOR UPDATE\n+TO authenticated\n+USING (\n+  \"organizationId\" IN (\n+    SELECT \"organizationId\" \n+    FROM \"public\".\"OrganizationMember\" \n+    WHERE \"userId\" = auth.uid()\n+  )\n+)\n+WITH CHECK (\n+  \"organizationId\" IN (\n+    SELECT \"organizationId\" \n+    FROM \"public\".\"OrganizationMember\" \n+    WHERE \"userId\" = auth.uid()\n+  )\n+);\n+\n+CREATE POLICY \"authenticated_users_can_delete_org_projects\" ON \"public\".\"Project\"\n+FOR DELETE\n+TO authenticated\n+USING (\n+  \"organizationId\" IN (\n+    SELECT \"organizationId\" \n+    FROM \"public\".\"OrganizationMember\" \n+    WHERE \"userId\" = auth.uid()\n+  )\n+);\n+\n+CREATE POLICY \"service_role_can_select_all_projects\" ON \"public\".\"Project\"\n+FOR SELECT\n+TO service_role\n+USING (true);\n+\n+CREATE POLICY \"service_role_can_insert_all_projects\" ON \"public\".\"Project\"\n+FOR INSERT\n+TO service_role\n+WITH CHECK (true);\n+\n+CREATE POLICY \"service_role_can_update_all_projects\" ON \"public\".\"Project\"\n+FOR UPDATE\n+TO service_role\n+USING (true)\n+WITH CHECK (true);\n+\n+CREATE POLICY \"service_role_can_delete_all_projects\" ON \"public\".\"Project\"\n+FOR DELETE\n+TO service_role\n+USING (true);\n+\n+COMMENT ON POLICY \"authenticated_users_can_select_org_projects\" ON \"public\".\"Project\" IS 'Authenticated users can only view projects belonging to organizations they are members of';\n+COMMENT ON POLICY \"authenticated_users_can_insert_projects\" ON \"public\".\"Project\" IS 'Authenticated users can create any project';\n+COMMENT ON POLICY \"authenticated_users_can_update_org_projects\" ON \"public\".\"Project\" IS 'Authenticated users can only update projects in organizations they are members of';\n+COMMENT ON POLICY \"authenticated_users_can_delete_org_projects\" ON \"public\".\"Project\" IS 'Authenticated users can only delete projects in organizations they are members of';\n+COMMENT ON POLICY \"service_role_can_select_all_projects\" ON \"public\".\"Project\" IS 'Service role can view all projects (for jobs)';\n+COMMENT ON POLICY \"service_role_can_insert_all_projects\" ON \"public\".\"Project\" IS 'Service role can create any project (for jobs)';\n+COMMENT ON POLICY \"service_role_can_update_all_projects\" ON \"public\".\"Project\" IS 'Service role can update any project (for jobs)';\n+COMMENT ON POLICY \"service_role_can_delete_all_projects\" ON \"public\".\"Project\" IS 'Service role can delete any project (for jobs)';"
        },
        {
            "filename": "frontend/packages/jobs/src/libs/supabase.ts",
            "status": "modified",
            "changes": 2,
            "patch": "@@ -4,7 +4,7 @@ export type SupabaseClient = ReturnType<typeof _createClient>\n \n export function createClient(): SupabaseClient {\n   const supabaseUrl = process.env['NEXT_PUBLIC_SUPABASE_URL']\n-  const supabaseKey = process.env['NEXT_PUBLIC_SUPABASE_ANON_KEY']\n+  const supabaseKey = process.env['SUPABASE_SERVICE_ROLE_KEY']\n \n   if (!supabaseUrl || !supabaseKey) {\n     throw new Error('Missing Supabase environment variables')"
        },
        {
            "filename": "scripts/extract-supabase-service-key.sh",
            "status": "added",
            "changes": 37,
            "patch": "@@ -0,0 +1,37 @@\n+#!/bin/bash\n+\n+# Execute the supabase status command and capture its output\n+STATUS_OUTPUT=$(pnpm --filter @liam-hq/db exec supabase status)\n+\n+# Extract the service role key from the output\n+# Using a precise grep pattern to match only the service role key line\n+SERVICE_KEY_LINE=$(echo \"$STATUS_OUTPUT\" | grep -m 1 \"service_role key:\")\n+\n+# Clean up and extract just the key\n+# Remove \"service_role key: \" prefix\n+SERVICE_KEY=$(echo \"$SERVICE_KEY_LINE\" | sed 's/.*service_role key: \\(.*\\)/\\1/' | tr -d ' ')\n+\n+if [ -z \"$SERVICE_KEY\" ]; then\n+  echo \"Failed to extract the service role key from Supabase status output\"\n+  exit 1\n+fi\n+\n+echo \"Extracted service role key: $SERVICE_KEY\"\n+\n+# Check if .env file exists\n+if [ ! -f .env ]; then\n+  echo \"error: .env file does not exist\"\n+  exit 1\n+fi\n+\n+# Check if SUPABASE_SERVICE_ROLE_KEY already exists in .env\n+if grep -q \"SUPABASE_SERVICE_ROLE_KEY=\" .env; then\n+  # Replace the existing line\n+  sed -i.bak \"s/SUPABASE_SERVICE_ROLE_KEY=.*/SUPABASE_SERVICE_ROLE_KEY=$SERVICE_KEY/\" .env\n+  rm -f .env.bak\n+  echo \"Updated SUPABASE_SERVICE_ROLE_KEY in .env file\"\n+else\n+  # Append the new line\n+  echo \"SUPABASE_SERVICE_ROLE_KEY=$SERVICE_KEY\" >> .env\n+  echo \"Added SUPABASE_SERVICE_ROLE_KEY to .env file\"\n+fi \n\\ No newline at end of file"
        }
    ],
    "prDescription": "# Project Table RLS Policy Implementation\r\n\r\nThis PR adds Row Level Security (RLS) policies to the Project table to ensure proper access control:\r\n\r\n## Changes\r\n- Enable RLS on the Project table\r\n- Add SELECT policy that allows users to view only projects from organizations they belong to\r\n- Add INSERT policy that allows all authenticated users to create projects\r\n- Add UPDATE/DELETE policies that restrict operations to users within the same organization\r\n- Add service_role policies to allow background jobs to bypass RLS\r\n- Skip tests affected by RLS policy with comments for future fixes\r\n\r\nThe project with ID 2 is not part of my organization, so it's being blocked by RLS.\r\n\r\nhttps://github.com/user-attachments/assets/6f94e528-c39e-489c-a622-e43812b41ea5\r\n\r\n\r\n\r\nI set the Supabase service role key as an environment variable in Trigger.dev and Vercel, and confirmed that the job runs successfully.\r\n<img width=\"638\" alt=\"スクリーンショット 2025-04-11 18 22 30\" src=\"https://github.com/user-attachments/assets/a03d48d6-ca5e-4c4e-87c0-ad99123d4f01\" />\r\n\r\n\r\n## Implementation Details\r\n- Created migration file for adding RLS policies\r\n- Updated schema.sql to reflect the RLS policies\r\n- Commented out failing tests with notes about RLS restrictions\r\n\r\nLink to Devin run: https://app.devin.ai/sessions/84ee11eab6fd45359d17cd76110cdcb7\r\n\r\nRequested by: noritaka.ikeda@route06.co.jp",
    "prComments": "changeset-bot[bot]: ###  ⚠️  No Changeset found\n\nLatest commit: 6148eb32c7d61087d53e144ab512b239048e6d91\n\nMerging this PR will not cause a version bump for any packages. If these changes should not result in a new version, you're good to go. **If these changes should result in a version bump, you need to add a changeset.**\n\n<details><summary>This PR includes no changesets</summary>\n\n  When changesets are added to this PR, you'll see the packages that this PR includes changesets for and the associated semver types\n\n</details>\n\n[Click here to learn what changesets are, and how to add one](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md).\n\n[Click here if you're a maintainer who wants to add a changeset to this PR](https://github.com/liam-hq/liam/new/devin/1744287102-add-project-table-rls?filename=.changeset/breezy-tomatoes-arrive.md&value=---%0A%22%40liam-hq%2Fapp%22%3A%20patch%0A%22%40liam-hq%2Fdb%22%3A%20patch%0A%22%40liam-hq%2Fjobs%22%3A%20patch%0A---%0A%0A%E2%9C%A8%20feat%3A%20add%20RLS%20policy%20to%20Project%20table%0A)\n\n\n\nvercel[bot]: [vc]: #S5rAUwpEN8Bs2IUTa9foaA1mGUVBuR6kySZAv03AGSU=:eyJpc01vbm9yZXBvIjp0cnVlLCJ0eXBlIjoiZ2l0aHViIiwicHJvamVjdHMiOlt7Im5hbWUiOiJsaWFtLWRvY3MiLCJyb290RGlyZWN0b3J5IjoiZnJvbnRlbmQvYXBwcy9kb2NzIiwibGl2ZUZlZWRiYWNrIjp7InJlc29sdmVkIjowLCJ1bnJlc29sdmVkIjowLCJ0b3RhbCI6MCwibGluayI6IiJ9LCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vcm91dGUtMDYtY29yZS9saWFtLWRvY3MvOWRVOGVtZEh5TG45OG1QV1FqVndjVUU1U0VFeCIsIm5leHRDb21taXRTdGF0dXMiOiJJR05PUkVEIiwicHJldmlld1VybCI6ImxpYW0tZG9jcy1naXQtZGV2aW4tMTc0NDI4NzEwMi1hZGQtcHJvamVjdC0xOTY1YzUtcm91dGUtMDYtY29yZS52ZXJjZWwuYXBwIn0seyJuYW1lIjoibGlhbS1lcmQtc2FtcGxlIiwicm9vdERpcmVjdG9yeSI6ImZyb250ZW5kL2FwcHMvZXJkLXNhbXBsZSIsImluc3BlY3RvclVybCI6Imh0dHBzOi8vdmVyY2VsLmNvbS9yb3V0ZS0wNi1jb3JlL2xpYW0tZXJkLXNhbXBsZS9INEhyeUxaUWN3SDlQdGZ1WTIzckU1NnBlb1ZFIiwicHJldmlld1VybCI6ImxpYW0tZXJkLXNhbXBsZS1naXQtZGV2aW4tMTc0NDI4NzEwMi1hZGQtcC1jOWIzOTgtcm91dGUtMDYtY29yZS52ZXJjZWwuYXBwIiwibmV4dENvbW1pdFN0YXR1cyI6IlBFTkRJTkciLCJsaXZlRmVlZGJhY2siOnsicmVzb2x2ZWQiOjAsInVucmVzb2x2ZWQiOjAsInRvdGFsIjowLCJsaW5rIjoibGlhbS1lcmQtc2FtcGxlLWdpdC1kZXZpbi0xNzQ0Mjg3MTAyLWFkZC1wLWM5YjM5OC1yb3V0ZS0wNi1jb3JlLnZlcmNlbC5hcHAifX0seyJuYW1lIjoibGlhbS1hcHAiLCJyb290RGlyZWN0b3J5IjoiZnJvbnRlbmQvYXBwcy9hcHAiLCJpbnNwZWN0b3JVcmwiOiJodHRwczovL3ZlcmNlbC5jb20vcm91dGUtMDYtY29yZS9saWFtLWFwcC9IQ3hCdmFnOXdCa3g1eHJmZnFQa3BmZjlrTkRLIiwicHJldmlld1VybCI6ImxpYW0tYXBwLWdpdC1kZXZpbi0xNzQ0Mjg3MTAyLWFkZC1wcm9qZWN0LWNlNTFhMS1yb3V0ZS0wNi1jb3JlLnZlcmNlbC5hcHAiLCJuZXh0Q29tbWl0U3RhdHVzIjoiUEVORElORyIsImxpdmVGZWVkYmFjayI6eyJyZXNvbHZlZCI6MCwidW5yZXNvbHZlZCI6MCwidG90YWwiOjAsImxpbmsiOiJsaWFtLWFwcC1naXQtZGV2aW4tMTc0NDI4NzEwMi1hZGQtcHJvamVjdC1jZTUxYTEtcm91dGUtMDYtY29yZS52ZXJjZWwuYXBwIn19XX0=\n**The latest updates on your projects**. Learn more about [Vercel for Git ↗︎](https://vercel.link/github-learn-more)\n\n| Name | Status | Preview | Comments | Updated (UTC) |\n| :--- | :----- | :------ | :------- | :------ |\n| **liam-app** | 🔄 Building ([Inspect](https://vercel.com/route-06-core/liam-app/HCxBvag9wBkx5xrffqPkpff9kNDK)) | [Visit Preview](https://liam-app-git-devin-1744287102-add-project-ce51a1-route-06-core.vercel.app) | 💬 [**Add feedback**](https://vercel.live/open-feedback/liam-app-git-devin-1744287102-add-project-ce51a1-route-06-core.vercel.app?via=pr-comment-feedback-link) | Apr 11, 2025 11:01am |\n| **liam-erd-sample** | 🔄 Building ([Inspect](https://vercel.com/route-06-core/liam-erd-sample/H4HryLZQcwH9PtfuY23rE56peoVE)) | [Visit Preview](https://liam-erd-sample-git-devin-1744287102-add-p-c9b398-route-06-core.vercel.app) | 💬 [**Add feedback**](https://vercel.live/open-feedback/liam-erd-sample-git-devin-1744287102-add-p-c9b398-route-06-core.vercel.app?via=pr-comment-feedback-link) | Apr 11, 2025 11:01am |\n\n<details><summary>1 Skipped Deployment</summary>\n\n| Name | Status | Preview | Comments | Updated (UTC) |\n| :--- | :----- | :------ | :------- | :------ |\n| **liam-docs** | ⬜️ Ignored ([Inspect](https://vercel.com/route-06-core/liam-docs/9dU8emdHyLn98mPWQjVwcUE5SEEx)) | [Visit Preview](https://liam-docs-git-devin-1744287102-add-project-1965c5-route-06-core.vercel.app) |  | Apr 11, 2025 11:01am |\n</details>\n\n\n\n\n\ndevin-ai-integration[bot]: ### 🤖 Devin AI Engineer\n\nI'll be helping with this pull request! Here's what you should know:\n\n✅ I will automatically:\n- Address comments on this PR. Add \"(aside)\" to your comment to have me ignore it.\n- Look at CI failures and help fix them\n\nNote: I can only respond to comments from users who have write access to this repository.\n\n⚙️ Control Options:\n- [ ] Disable automatic comment and CI monitoring\n\n\nsupabase[bot]: [supa]:alemrooipovroxghigvq\n**Updates to [Preview Branch (devin/1744287102-add-project-table-rls) ↗︎](https://supabase.com/dashboard/project/alemrooipovroxghigvq)**\n\n| Deployments | Status                      | Updated                   |\n| ----------- | --------------------------- | ------------------------- |\n| Database    | ✅ | Fri, 11 Apr 2025 10:30:28 UTC |\n| Services    | ✅  | Fri, 11 Apr 2025 10:30:28 UTC  |\n| APIs        | ✅      | Fri, 11 Apr 2025 10:30:28 UTC      |\n\nTasks are run on every commit but only new migration files are pushed.\nClose and reopen this PR if you want to apply changes from existing seed or migration files.\n\n| Tasks          | Status                       | Updated                    |\n| -------------- | ---------------------------- | -------------------------- |\n| Configurations | ✅ | Fri, 11 Apr 2025 10:30:28 UTC |\n| Migrations     | ✅ | Fri, 11 Apr 2025 10:30:28 UTC |\n| Seeding        | ✅   | Fri, 11 Apr 2025 10:30:28 UTC   |\n| Edge Functions | ✅  | Fri, 11 Apr 2025 10:30:28 UTC  |\n\n<hr/>\n\n\n\n\nView logs for this [Workflow Run ↗︎](https://supabase.com/dashboard/project/alemrooipovroxghigvq/branches).\nLearn more about [Supabase for Git ↗︎](https://supabase.com/docs/guides/platform/branching).\n\n\nliam-migration[bot]: This migration adds RLS policies to the Project table, removes the redundant status filter from queries, and updates the service role key usage via a new script. A key concern is the skipping of tests and potential exposure of the service role key, which could affect migration safety and security. Overall, the atomic migration design and adherence to naming conventions enhance both data integrity and access control, with clear next steps for clarifying requirements and performance benchmarks.\n\nMigration URL: https://liam-erd-web.vercel.app/app/projects/6/ref/devin%2F1744287102-add-project-table-rls/migrations/181\n\nER Diagram:\n- View ERD for frontend/packages/db/schema/schema.sql: https://liam-erd-web.vercel.app/app/projects/6/ref/devin%2F1744287102-add-project-table-rls/schema/frontend/packages/db/schema/schema.sql\n\nliam-migration-preview[bot]: This migration adds row level security policies for the Project table with clear documentation and naming consistency. The most critical issue is the exposure of the SUPABASE_SERVICE_ROLE_KEY in logs and the skipped tests that could affect migration safety and data integrity. Overall, the migration reflects good schema design and project conventions, but addressing the identified risks will further strengthen system reliability and security.\n\nMigration URL: https://liam-app-git-staging-route-06-core.vercel.app/app/projects/6/ref/devin%2F1744287102-add-project-table-rls/migrations/181\n\nER Diagram:\n- View ERD for frontend/packages/db/schema/schema.sql: https://liam-app-git-staging-route-06-core.vercel.app/app/projects/6/ref/devin%2F1744287102-add-project-table-rls/schema/frontend/packages/db/schema/schema.sql\n\ngithub-actions[bot]: frontend/packages/prompt-test result:\n\nvisit: https://cloud.langfuse.com/project/cm8ii4o5o03fpad078o638g1d/datasets/cm99wciaz070ead07rgjr88ou/runs/cm9cnbqtj01egad07rlbxtmzu\n\n| run items length |\n| --- |\n| 3 |\n<!-- Sticky Pull Request Comment -->\n\nqodo-merge-pro-for-open-source[bot]: ## CI Feedback 🧐\n\n#### (Feedback updated until commit https://github.com/liam-hq/liam/commit/2ead2ccce48c5bda530e8148dbc58c653a3cbc9a)\n\n\nA test triggered by this PR failed. Here is an AI-generated analysis of the failure:\n\n<table><tr><td>\n\n**Action:** frontend-ci</td></tr>\n<tr><td>\n\n**Failed stage:** [Check for diff in generated types and schema.sql](https://github.com/liam-hq/liam/actions/runs/14400648718/job/40385484520) [❌]\n\n</td></tr>\n<tr><td>\n\n**Failure summary:**\n\nThe action failed because the generated types and schema.sql differ from the committed files (line <br>1849). This was detected during the build process after running tests. The specific error message <br>\"Generated types and schema.sql differ from committed files\" indicates that there are discrepancies <br>between the automatically generated database schema files and what's currently committed in the <br>repository.<br> <br> Additionally, there were several TypeScript errors in the CLI package's vite.config.ts file (lines <br>1323-1503) and a warning about a missing file: \"chmod: cannot access 'dist-cli/bin/cli.js': No such <br>file or directory\" (line 1323).<br>\n\n</td></tr>\n<tr><td>\n\n<details><summary>Relevant error logs:</summary>\n\n\n```yaml\n1:  ##[group]Operating System\n2:  Ubuntu\n...\n\n155:  ##[group]Run pnpm install --frozen-lockfile --prefer-offline\n156:  \u001b[36;1mpnpm install --frozen-lockfile --prefer-offline\u001b[0m\n157:  shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}\n158:  env:\n159:  PNPM_HOME: /home/runner/setup-pnpm/node_modules/.bin\n160:  ##[endgroup]\n161:  Scope: all 16 workspace projects\n162:  Lockfile is up to date, resolution step is skipped\n163:  Progress: resolved 1, reused 0, downloaded 0, added 0\n164:  Packages: +1552\n165:  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n166:  Progress: resolved 1552, reused 1360, downloaded 0, added 0\n167:  Progress: resolved 1552, reused 1531, downloaded 0, added 695\n168:  Progress: resolved 1552, reused 1531, downloaded 0, added 1082\n169:  Progress: resolved 1552, reused 1531, downloaded 0, added 1552, done\n170:  WARN  Failed to create bin at /home/runner/work/liam/liam/frontend/apps/erd-sample/node_modules/.bin/liam. ENOENT: no such file or directory, open '/home/runner/work/liam/liam/frontend/packages/cli/dist-cli/bin/cli.js'\n171:  devDependencies:\n172:  + @changesets/cli 2.28.1\n173:  + @changesets/get-github-info 0.6.0\n174:  + @changesets/types 6.1.0\n175:  + @turbo/gen 2.5.0\n176:  + concurrently 9.1.2\n177:  + syncpack 13.0.3\n178:  + turbo 2.5.0\n179:  + vercel 41.5.0\n180:  frontend/apps/docs postinstall$ fumadocs-mdx\n181:  frontend/apps/docs postinstall: [MDX] types generated\n182:  frontend/apps/docs postinstall: Done\n183:  frontend/apps/app postinstall$ cp ../../packages/db-structure/node_modules/@ruby/prism/src/prism.wasm prism.wasm\n184:  frontend/apps/app postinstall: Done\n185:  WARN  Failed to create bin at /home/runner/work/liam/liam/frontend/apps/erd-sample/node_modules/.bin/liam. ENOENT: no such file or directory, open '/home/runner/work/liam/liam/frontend/apps/erd-sample/node_modules/@liam-hq/cli/dist-cli/bin/cli.js'\n186:  Done in 7.4s using pnpm v9.15.9\n...\n\n647:  9ced58d1ef15: Verifying Checksum\n648:  9ced58d1ef15: Download complete\n649:  2b092e92b1a0: Download complete\n650:  4f4fb700ef54: Verifying Checksum\n651:  4f4fb700ef54: Download complete\n652:  6bbeea27f58c: Verifying Checksum\n653:  d261077062b2: Pull complete\n654:  2babd04ec7b1: Pull complete\n655:  6bbeea27f58c: Pull complete\n656:  2b092e92b1a0: Pull complete\n657:  9ced58d1ef15: Pull complete\n658:  4f4fb700ef54: Pull complete\n659:  Digest: sha256:4bc04aca94a44f04b427a490f346e7397ef7ce61fe589d718f744f7d92cb5c80\n660:  Status: Downloaded newer image for public.ecr.aws/supabase/vector:0.28.1-alpine\n661:  2.8.1: Pulling from supabase/kong\n662:  failed to display json stream: toomanyrequests: Rate exceeded\n663:  Retrying after 4s: public.ecr.aws/supabase/kong:2.8.1\n...\n\n954:  cache miss, executing 7c1eab75da22f29d\n955:  > @liam-hq/erd-core@0.1.6 gen /home/runner/work/liam/liam/frontend/packages/erd-core\n956:  > concurrently \"pnpm:gen:*\"\n957:  [css] \n958:  [css] > @liam-hq/erd-core@0.1.6 gen:css /home/runner/work/liam/liam/frontend/packages/erd-core\n959:  [css] > tcm src\n960:  [css] \n961:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/styles/variables.css.d.ts\n962:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/styles/globals.css.d.ts\n963:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDRenderer/ERDRenderer.module.css.d.ts\n964:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDContent/ERDContent.module.css.d.ts\n965:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDRenderer/TableDetailDrawer/TableDetailDrawer.module.css.d.ts\n966:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDRenderer/RelationshipEdgeParticleMarker/RelationshipEdgeParticleMarker.module.css.d.ts\n967:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDRenderer/LeftPane/LeftPane.module.css.d.ts\n968:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDRenderer/Toolbar/DesktopToolbar.module.css.d.ts\n969:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDRenderer/ErrorDisplay/ParseErrorDisplay.module.css.d.ts\n970:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDRenderer/ErrorDisplay/NetworkErrorDisplay.module.css.d.ts\n971:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDRenderer/ErrorDisplay/ErrorDisplay.module.css.d.ts\n972:  [css] Wrote /home/runner/work/liam/liam/frontend/packages/erd-core/src/features/erd/components/ERDRenderer/CardinalityMarkers/CardinalityMarkers.module.css.d.ts\n...\n\n1061:  > @liam-hq/jobs@0.1.0 test /home/runner/work/liam/liam/frontend/packages/jobs\n1062:  > vitest --watch=false\n1063:  \u001b[1m\u001b[7m\u001b[36m RUN \u001b[39m\u001b[27m\u001b[22m \u001b[36mv3.1.1 \u001b[39m\u001b[90m/home/runner/work/liam/liam/frontend/packages/jobs\u001b[39m\n1064:  \u001b[2m\u001b[90m↓\u001b[39m\u001b[22m src/functions/__tests__/postComment.test.ts \u001b[2m(\u001b[22m\u001b[2m5 tests\u001b[22m\u001b[2m | \u001b[22m\u001b[33m5 skipped\u001b[39m\u001b[2m)\u001b[22m\n1065:  \u001b[2m\u001b[90m↓\u001b[39m\u001b[22m src/functions/__tests__/processSaveReview.test.ts \u001b[2m(\u001b[22m\u001b[2m3 tests\u001b[22m\u001b[2m | \u001b[22m\u001b[33m3 skipped\u001b[39m\u001b[2m)\u001b[22m\n1066:  \u001b[2m Test Files \u001b[22m \u001b[33m2 skipped\u001b[39m\u001b[90m (2)\u001b[39m\n1067:  \u001b[2m      Tests \u001b[22m \u001b[33m8 skipped\u001b[39m\u001b[90m (8)\u001b[39m\n1068:  \u001b[2m   Start at \u001b[22m 10:05:09\n1069:  \u001b[2m   Duration \u001b[22m 2.17s\u001b[2m (transform 811ms, setup 0ms, collect 1.88s, tests 0ms, environment 1ms, prepare 967ms)\u001b[22m\n1070:  ##[endgroup]\n1071:  ##[group]@liam-hq/prompt-test:test\n1072:  cache miss, executing e51b4b9bcc5701fe\n1073:  > @liam-hq/prompt-test@0.1.0 test /home/runner/work/liam/liam/frontend/packages/prompt-test\n1074:  > tsx src/index.ts\n1075:  Langfuse secret key was not passed to constructor or not set as 'LANGFUSE_SECRET_KEY' environment variable. No observability data will be sent to Langfuse.\n1076:  [Langfuse SDK] 401: Unauthorized. Please check your public/private host settings. Refer to our installation and setup guide: https://langfuse.com/docs/sdk/typescript/guide for details on SDK configuration. Make sure to keep your SDK updated, refer to https://www.npmjs.com/package/langfuse for details. Error details: LangfuseFetchHttpError: HTTP error while fetching Langfuse: 401 and body: {\"message\":\"Invalid authorization header\"}\n1077:  [Langfuse SDK] 401: Unauthorized. Please check your public/private host settings. Refer to our installation and setup guide: https://langfuse.com/docs/sdk/typescript/guide for details on SDK configuration. Make sure to keep your SDK updated, refer to https://www.npmjs.com/package/langfuse for details. Error details: LangfuseFetchHttpError: HTTP error while fetching Langfuse: 401 and body: {\"message\":\"Invalid authorization header\"}\n1078:  TypeError: itemsResponse.data is not iterable (cannot read property undefined)\n1079:  at Langfuse.getDataset (/home/runner/work/liam/liam/node_modules/.pnpm/langfuse-core@3.37.1/node_modules/langfuse-core/src/index.ts:1434:13)\n...\n\n1105:  \u001b[1m\u001b[7m\u001b[36m RUN \u001b[39m\u001b[27m\u001b[22m \u001b[36mv3.1.1 \u001b[39m\u001b[90m/home/runner/work/liam/liam/frontend/packages/db-structure\u001b[39m\n1106:  \u001b[32m✓\u001b[39m src/parser/tbls/index.test.ts \u001b[2m(\u001b[22m\u001b[2m20 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 50\u001b[2mms\u001b[22m\u001b[39m\n1107:  (node:7649) ExperimentalWarning: WASI is an experimental feature and might change at any time\n1108:  (Use `node --trace-warnings ...` to show where the warning was created)\n1109:  \u001b[32m✓\u001b[39m src/parser/prisma/index.test.ts \u001b[2m(\u001b[22m\u001b[2m20 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[33m 524\u001b[2mms\u001b[22m\u001b[39m\n1110:  \u001b[32m✓\u001b[39m src/parser/schemarb/index.test.ts \u001b[2m(\u001b[22m\u001b[2m18 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[33m 508\u001b[2mms\u001b[22m\u001b[39m\n1111:  \u001b[32m✓\u001b[39m src/parser/sql/postgresql/processSQLInChunks.test.ts \u001b[2m(\u001b[22m\u001b[2m6 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 30\u001b[2mms\u001b[22m\u001b[39m\n1112:  \u001b[32m✓\u001b[39m src/schema/overrideDbStructure.test.ts \u001b[2m(\u001b[22m\u001b[2m6 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 30\u001b[2mms\u001b[22m\u001b[39m\n1113:  \u001b[32m✓\u001b[39m src/parser/tbls/schema.generated.test.ts \u001b[2m(\u001b[22m\u001b[2m5 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 46\u001b[2mms\u001b[22m\u001b[39m\n1114:  \u001b[32m✓\u001b[39m src/parser/schemarb/singularize.test.ts \u001b[2m(\u001b[22m\u001b[2m18 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 16\u001b[2mms\u001b[22m\u001b[39m\n1115:  \u001b[32m✓\u001b[39m src/parser/supportedFormat/detectFormat.test.ts \u001b[2m(\u001b[22m\u001b[2m10 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 8\u001b[2mms\u001b[22m\u001b[39m\n1116:  (node:7929) ExperimentalWarning: WASI is an experimental feature and might change at any time\n1117:  (Use `node --trace-warnings ...` to show where the warning was created)\n1118:  \u001b[32m✓\u001b[39m src/parser/index.test.ts \u001b[2m(\u001b[22m\u001b[2m2 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 274\u001b[2mms\u001b[22m\u001b[39m\n1119:  \u001b[32m✓\u001b[39m src/parser/sql/postgresql/index.test.ts \u001b[2m(\u001b[22m\u001b[2m19 tests\u001b[22m\u001b[2m | \u001b[22m\u001b[33m1 skipped\u001b[39m\u001b[2m)\u001b[22m\u001b[33m 44036\u001b[2mms\u001b[22m\u001b[39m\n1120:  \u001b[33m\u001b[2m✓\u001b[22m\u001b[39m processor\u001b[2m > \u001b[22mLong \"create table\" statement (exceeds 500 lines, surpassing CHUNK_SIZE)\u001b[2m > \u001b[22mparses without errors \u001b[33m 21177\u001b[2mms\u001b[22m\u001b[39m\n1121:  \u001b[33m\u001b[2m✓\u001b[22m\u001b[39m processor\u001b[2m > \u001b[22mLong \"create function\" statement (exceeds 500 lines, surpassing CHUNK_SIZE)\u001b[2m > \u001b[22mparses without errors \u001b[33m 22154\u001b[2mms\u001b[22m\u001b[39m\n1122:  \u001b[2m Test Files \u001b[22m \u001b[1m\u001b[32m10 passed\u001b[39m\u001b[22m\u001b[90m (10)\u001b[39m\n...\n\n1154:  [vite]  * [new branch]        add-schema-meta          -> origin/add-schema-meta\n1155:  [vite]  * [new branch]        add_script_to_gen_schema -> origin/add_script_to_gen_schema\n1156:  [vite]  * [new branch]        add_script_to_gen_schema_json -> origin/add_script_to_gen_schema_json\n1157:  [vite]  * [new branch]        add_test_table           -> origin/add_test_table\n1158:  [vite]  * [new branch]        avoid-cp-for-windows-actions -> origin/avoid-cp-for-windows-actions\n1159:  [vite]  * [new branch]        avoid-semicolon-logic-2  -> origin/avoid-semicolon-logic-2\n1160:  [vite]  * [new branch]        avoid-semicolon-logic-test -> origin/avoid-semicolon-logic-test\n1161:  [vite]  * [new branch]        before-promptfoo-experiment -> origin/before-promptfoo-experiment\n1162:  [vite]  * [new branch]        changeset-invest1        -> origin/changeset-invest1\n1163:  [vite]  * [new branch]        changeset-invest3        -> origin/changeset-invest3\n1164:  [vite]  * [new branch]        changeset-release/changeset-invest1 -> origin/changeset-release/changeset-invest1\n1165:  [vite]  * [new branch]        changeset-release/main   -> origin/changeset-release/main\n1166:  [vite]  * [new branch]        check-github-action      -> origin/check-github-action\n1167:  [vite]  * [new branch]        chore/install-renovate   -> origin/chore/install-renovate\n1168:  [vite]  * [new branch]        cli-schema-json-for-local -> origin/cli-schema-json-for-local\n1169:  [vite]  * [new branch]        console-error-1-draft    -> origin/console-error-1-draft\n1170:  [vite]  * [new branch]        delete-docs-vercel-deploy-erd-yml -> origin/delete-docs-vercel-deploy-erd-yml\n1171:  [vite]  * [new branch]        devin/1738820244-add-init-command-tests -> origin/devin/1738820244-add-init-command-tests\n1172:  [vite]  * [new branch]        devin/1738828298-add-multiline-comment-support -> origin/devin/1738828298-add-multiline-comment-support\n1173:  [vite]  * [new branch]        devin/1739501885-improve-navigation-test-waits -> origin/devin/1739501885-improve-navigation-test-waits\n1174:  [vite]  * [new branch]        devin/1740113652-update-changeset-docs -> origin/devin/1740113652-update-changeset-docs\n1175:  [vite]  * [new branch]        devin/1741661851-optimize-github-config-validation -> origin/devin/1741661851-optimize-github-config-validation\n1176:  [vite]  * [new branch]        devin/1741663537-github-env-validation-at-boot -> origin/devin/1741663537-github-env-validation-at-boot\n1177:  [vite]  * [new branch]        devin/1741825670-postgresql-parser-test -> origin/devin/1741825670-postgresql-parser-test\n1178:  [vite]  * [new branch]        devin/1743062004-investigate-issue-1005 -> origin/devin/1743062004-investigate-issue-1005\n1179:  [vite]  * [new branch]        devin/1744202861-add-organization-ui -> origin/devin/1744202861-add-organization-ui\n1180:  [vite]  * [new branch]        devin/1744287102-add-project-table-rls -> origin/devin/1744287102-add-project-table-rls\n1181:  [vite]  * [new branch]        emu-pr-1033-base         -> origin/emu-pr-1033-base\n1182:  [vite]  * [new branch]        emu-pr-1033-feature      -> origin/emu-pr-1033-feature\n1183:  [vite]  * [new branch]        emu-pr-1081-base         -> origin/emu-pr-1081-base\n1184:  [vite]  * [new branch]        emu-pr-1081-feature      -> origin/emu-pr-1081-feature\n1185:  [vite]  * [new branch]        enhance-the-highlighting-of-related-table-nodes-when-hovering-usememo-1 -> origin/enhance-the-highlighting-of-related-table-nodes-when-hovering-usememo-1\n1186:  [vite]  * [new branch]        error-message-erd-network-error -> origin/error-message-erd-network-error\n1187:  [vite]  * [new branch]        exclude-positive-feedback-from-suggestion-snippets -> origin/exclude-positive-feedback-from-suggestion-snippets\n...\n\n1216:  [vite]  * [new branch]        parse-db-structure-in-jobs-package -> origin/parse-db-structure-in-jobs-package\n1217:  [vite]  * [new branch]        pr-1088                  -> origin/pr-1088\n1218:  [vite]  * [new branch]        primary-key-icon-2       -> origin/primary-key-icon-2\n1219:  [vite]  * [new branch]        prompt-test-package      -> origin/prompt-test-package\n1220:  [vite]  * [new branch]        promptfoo-go-1           -> origin/promptfoo-go-1\n1221:  [vite]  * [new branch]        reduce-set-node-calling-chance-3 -> origin/reduce-set-node-calling-chance-3\n1222:  [vite]  * [new branch]        refactor-to-testcases    -> origin/refactor-to-testcases\n1223:  [vite]  * [new branch]        refactor_edge_cardinality_by_using_custom_mark -> origin/refactor_edge_cardinality_by_using_custom_mark\n1224:  [vite]  * [new branch]        refactor_hidden_node_handle -> origin/refactor_hidden_node_handle\n1225:  [vite]  * [new branch]        release-debug-branch     -> origin/release-debug-branch\n1226:  [vite]  * [new branch]        rename-review-issue-to-review-feedback -> origin/rename-review-issue-to-review-feedback\n1227:  [vite]  * [new branch]        renovate/major-react-monorepo -> origin/renovate/major-react-monorepo\n1228:  [vite]  * [new branch]        renovate/pnpm-10.x       -> origin/renovate/pnpm-10.x\n1229:  [vite]  * [new branch]        renovate/react-monorepo  -> origin/renovate/react-monorepo\n1230:  [vite]  * [new branch]        renovate/xyflow-react-12.x -> origin/renovate/xyflow-react-12.x\n1231:  [vite]  * [new branch]        revert-435-error-message-erd -> origin/revert-435-error-message-erd\n1232:  [vite]  * [new branch]        review-suggestion-patch-suggestion-2 -> origin/review-suggestion-patch-suggestion-2\n...\n\n1310:  [vite]  * [new tag]           @liam-hq/erd-core@0.1.0  -> @liam-hq/erd-core@0.1.0\n1311:  [vite]  * [new tag]           @liam-hq/erd-core@0.1.1  -> @liam-hq/erd-core@0.1.1\n1312:  [vite]  * [new tag]           @liam-hq/erd-core@0.1.2  -> @liam-hq/erd-core@0.1.2\n1313:  [vite]  * [new tag]           @liam-hq/erd-core@0.1.3  -> @liam-hq/erd-core@0.1.3\n1314:  [vite]  * [new tag]           @liam-hq/erd-core@0.1.4  -> @liam-hq/erd-core@0.1.4\n1315:  [vite]  * [new tag]           @liam-hq/erd-core@0.1.5  -> @liam-hq/erd-core@0.1.5\n1316:  [vite]  * [new tag]           @liam-hq/erd-core@0.1.6  -> @liam-hq/erd-core@0.1.6\n1317:  [vite]  * [new tag]           @liam-hq/ui@0.0.12       -> @liam-hq/ui@0.0.12\n1318:  [vite]  * [new tag]           @liam-hq/ui@0.0.13       -> @liam-hq/ui@0.0.13\n1319:  [vite]  * [new tag]           @liam-hq/ui@0.0.14       -> @liam-hq/ui@0.0.14\n1320:  [vite]  * [new tag]           @liam-hq/ui@0.0.15       -> @liam-hq/ui@0.0.15\n1321:  [vite] \u001b[36mvite v6.2.6 \u001b[32mbuilding for production...\u001b[36m\u001b[39m\n1322:  [vite] transforming...\n1323:  [cli] chmod: cannot access 'dist-cli/bin/cli.js': No such file or directory\n1324:  [cli] \u001b[1m\u001b[33m(!) [plugin typescript] vite.config.ts (29:13): @rollup/plugin-typescript TS2769: No overload matches this call.\n1325:  [cli]   The last overload gave the following error.\n1326:  [cli]     Type 'PluginOption[]' is not assignable to type 'PluginOption'.\n...\n\n1369:  [cli]                                                                                           Type 'HotUpdatePluginContext' is not assignable to type 'HotUpdatePluginContext'. Two different types with this name exist, but they are unrelated.\n1370:  [cli]                                                                                             The types of 'environment.pluginContainer.environment' are incompatible between these types.\n1371:  [cli]                                                                                               Type 'import(\"/home/runner/work/liam/liam/node_modules/.pnpm/vite@6.2.5_@types+node@22.14.0_jiti@2.4.2_lightningcss@1.29.2_terser@5.39.0_tsx@4.19.3_yaml@2.7.1/node_modules/vite/dist/node/index\").Environment' is not assignable to type 'import(\"/home/runner/work/liam/liam/node_modules/.pnpm/vite@6.2.6_@types+node@22.14.0_jiti@2.4.2_lightningcss@1.29.2_terser@5.39.0_tsx@4.19.3_yaml@2.7.1/node_modules/vite/dist/node/index\").Environment'.\n1372:  [cli]                                                                                                 Type 'DevEnvironment' is not assignable to type 'Environment'.\u001b[39m\u001b[22m\n1373:  [cli] \u001b[1m/home/runner/work/liam/liam/frontend/packages/cli/vite.config.ts:29:13\u001b[22m\n1374:  [cli] \u001b[90m\n1375:  [cli] \u001b[7m29\u001b[0m   plugins: [react(), tsconfigPaths(), removeImportWasi(), setEnvPlugin()],\n1376:  [cli] \u001b[7m  \u001b[0m \u001b[91m            ~~~~~~~\u001b[0m\n1377:  [cli] \n1378:  [cli]   \u001b[96m../../../node_modules/.pnpm/vitest@3.1.1_@edge-runtime+vm@3.2.0_@types+debug@4.1.12_@types+node@22.14.0_jiti@2.4.2_lightn_shpnswoytopusgutofegjmyhgu/node_modules/vitest/dist/config.d.ts\u001b[0m:\u001b[93m86\u001b[0m:\u001b[93m18\u001b[0m\n1379:  [cli]     \u001b[7m86\u001b[0m declare function defineConfig(config: UserConfigExport): UserConfigExport;\n1380:  [cli]     \u001b[7m  \u001b[0m \u001b[96m                 ~~~~~~~~~~~~\u001b[0m\n1381:  [cli]     The last overload is declared here.\n1382:  [cli] \u001b[39m\n1383:  [cli] \u001b[1m\u001b[33m(!) [plugin typescript] vite.config.ts (29:22): @rollup/plugin-typescript TS2769: No overload matches this call.\n1384:  [cli]   The last overload gave the following error.\n1385:  [cli]     Type 'PluginOption[]' is not assignable to type 'PluginOption'.\n...\n\n1428:  [cli]                                                                                           Type 'HotUpdatePluginContext' is not assignable to type 'HotUpdatePluginContext'. Two different types with this name exist, but they are unrelated.\n1429:  [cli]                                                                                             The types of 'environment.pluginContainer.environment' are incompatible between these types.\n1430:  [cli]                                                                                               Type 'import(\"/home/runner/work/liam/liam/node_modules/.pnpm/vite@6.2.5_@types+node@22.14.0_jiti@2.4.2_lightningcss@1.29.2_terser@5.39.0_tsx@4.19.3_yaml@2.7.1/node_modules/vite/dist/node/index\").Environment' is not assignable to type 'import(\"/home/runner/work/liam/liam/node_modules/.pnpm/vite@6.2.6_@types+node@22.14.0_jiti@2.4.2_lightningcss@1.29.2_terser@5.39.0_tsx@4.19.3_yaml@2.7.1/node_modules/vite/dist/node/index\").Environment'.\n1431:  [cli]                                                                                                 Type 'DevEnvironment' is not assignable to type 'Environment'.\u001b[39m\u001b[22m\n1432:  [cli] \u001b[1m/home/runner/work/liam/liam/frontend/packages/cli/vite.config.ts:29:22\u001b[22m\n1433:  [cli] \u001b[90m\n1434:  [cli] \u001b[7m29\u001b[0m   plugins: [react(), tsconfigPaths(), removeImportWasi(), setEnvPlugin()],\n1435:  [cli] \u001b[7m  \u001b[0m \u001b[91m                     ~~~~~~~~~~~~~~~\u001b[0m\n1436:  [cli] \n1437:  [cli]   \u001b[96m../../../node_modules/.pnpm/vitest@3.1.1_@edge-runtime+vm@3.2.0_@types+debug@4.1.12_@types+node@22.14.0_jiti@2.4.2_lightn_shpnswoytopusgutofegjmyhgu/node_modules/vitest/dist/config.d.ts\u001b[0m:\u001b[93m86\u001b[0m:\u001b[93m18\u001b[0m\n1438:  [cli]     \u001b[7m86\u001b[0m declare function defineConfig(config: UserConfigExport): UserConfigExport;\n1439:  [cli]     \u001b[7m  \u001b[0m \u001b[96m                 ~~~~~~~~~~~~\u001b[0m\n1440:  [cli]     The last overload is declared here.\n1441:  [cli] \u001b[39m\n1442:  [cli] \u001b[1m\u001b[33m(!) [plugin typescript] vite.config.ts (29:39): @rollup/plugin-typescript TS2769: No overload matches this call.\n1443:  [cli]   The last overload gave the following error.\n1444:  [cli]     Type 'PluginOption[]' is not assignable to type 'PluginOption'.\n...\n\n1487:  [cli]                                                                                           Type 'HotUpdatePluginContext' is not assignable to type 'HotUpdatePluginContext'. Two different types with this name exist, but they are unrelated.\n1488:  [cli]                                                                                             The types of 'environment.pluginContainer.environment' are incompatible between these types.\n1489:  [cli]                                                                                               Type 'import(\"/home/runner/work/liam/liam/node_modules/.pnpm/vite@6.2.5_@types+node@22.14.0_jiti@2.4.2_lightningcss@1.29.2_terser@5.39.0_tsx@4.19.3_yaml@2.7.1/node_modules/vite/dist/node/index\").Environment' is not assignable to type 'import(\"/home/runner/work/liam/liam/node_modules/.pnpm/vite@6.2.6_@types+node@22.14.0_jiti@2.4.2_lightningcss@1.29.2_terser@5.39.0_tsx@4.19.3_yaml@2.7.1/node_modules/vite/dist/node/index\").Environment'.\n1490:  [cli]                                                                                                 Type 'DevEnvironment' is not assignable to type 'Environment'.\u001b[39m\u001b[22m\n1491:  [cli] \u001b[1m/home/runner/work/liam/liam/frontend/packages/cli/vite.config.ts:29:39\u001b[22m\n1492:  [cli] \u001b[90m\n1493:  [cli] \u001b[7m29\u001b[0m   plugins: [react(), tsconfigPaths(), removeImportWasi(), setEnvPlugin()],\n1494:  [cli] \u001b[7m  \u001b[0m \u001b[91m                                      ~~~~~~~~~~~~~~~~~~\u001b[0m\n1495:  [cli] \n1496:  [cli]   \u001b[96m../../../node_modules/.pnpm/vitest@3.1.1_@edge-runtime+vm@3.2.0_@types+debug@4.1.12_@types+node@22.14.0_jiti@2.4.2_lightn_shpnswoytopusgutofegjmyhgu/node_modules/vitest/dist/config.d.ts\u001b[0m:\u001b[93m86\u001b[0m:\u001b[93m18\u001b[0m\n1497:  [cli]     \u001b[7m86\u001b[0m declare function defineConfig(config: UserConfigExport): UserConfigExport;\n1498:  [cli]     \u001b[7m  \u001b[0m \u001b[96m                 ~~~~~~~~~~~~\u001b[0m\n1499:  [cli]     The last overload is declared here.\n1500:  [cli] \u001b[39m\n1501:  [cli] \u001b[1m\u001b[33m(!) [plugin typescript] vite.config.ts (29:59): @rollup/plugin-typescript TS2769: No overload matches this call.\n1502:  [cli]   The last overload gave the following error.\n1503:  [cli]     Type 'PluginOption[]' is not assignable to type 'PluginOption'.\n...\n\n1596:  * [new branch]        add-schema-meta          -> origin/add-schema-meta\n1597:  * [new branch]        add_script_to_gen_schema -> origin/add_script_to_gen_schema\n1598:  * [new branch]        add_script_to_gen_schema_json -> origin/add_script_to_gen_schema_json\n1599:  * [new branch]        add_test_table           -> origin/add_test_table\n1600:  * [new branch]        avoid-cp-for-windows-actions -> origin/avoid-cp-for-windows-actions\n1601:  * [new branch]        avoid-semicolon-logic-2  -> origin/avoid-semicolon-logic-2\n1602:  * [new branch]        avoid-semicolon-logic-test -> origin/avoid-semicolon-logic-test\n1603:  * [new branch]        before-promptfoo-experiment -> origin/before-promptfoo-experiment\n1604:  * [new branch]        changeset-invest1        -> origin/changeset-invest1\n1605:  * [new branch]        changeset-invest3        -> origin/changeset-invest3\n1606:  * [new branch]        changeset-release/changeset-invest1 -> origin/changeset-release/changeset-invest1\n1607:  * [new branch]        changeset-release/main   -> origin/changeset-release/main\n1608:  * [new branch]        check-github-action      -> origin/check-github-action\n1609:  * [new branch]        chore/install-renovate   -> origin/chore/install-renovate\n1610:  * [new branch]        cli-schema-json-for-local -> origin/cli-schema-json-for-local\n1611:  * [new branch]        console-error-1-draft    -> origin/console-error-1-draft\n1612:  * [new branch]        delete-docs-vercel-deploy-erd-yml -> origin/delete-docs-vercel-deploy-erd-yml\n1613:  * [new branch]        devin/1738820244-add-init-command-tests -> origin/devin/1738820244-add-init-command-tests\n1614:  * [new branch]        devin/1738828298-add-multiline-comment-support -> origin/devin/1738828298-add-multiline-comment-support\n1615:  * [new branch]        devin/1739501885-improve-navigation-test-waits -> origin/devin/1739501885-improve-navigation-test-waits\n1616:  * [new branch]        devin/1740113652-update-changeset-docs -> origin/devin/1740113652-update-changeset-docs\n1617:  * [new branch]        devin/1741661851-optimize-github-config-validation -> origin/devin/1741661851-optimize-github-config-validation\n1618:  * [new branch]        devin/1741663537-github-env-validation-at-boot -> origin/devin/1741663537-github-env-validation-at-boot\n1619:  * [new branch]        devin/1741825670-postgresql-parser-test -> origin/devin/1741825670-postgresql-parser-test\n1620:  * [new branch]        devin/1743062004-investigate-issue-1005 -> origin/devin/1743062004-investigate-issue-1005\n1621:  * [new branch]        devin/1744202861-add-organization-ui -> origin/devin/1744202861-add-organization-ui\n1622:  * [new branch]        devin/1744287102-add-project-table-rls -> origin/devin/1744287102-add-project-table-rls\n1623:  * [new branch]        emu-pr-1033-base         -> origin/emu-pr-1033-base\n1624:  * [new branch]        emu-pr-1033-feature      -> origin/emu-pr-1033-feature\n1625:  * [new branch]        emu-pr-1081-base         -> origin/emu-pr-1081-base\n1626:  * [new branch]        emu-pr-1081-feature      -> origin/emu-pr-1081-feature\n1627:  * [new branch]        enhance-the-highlighting-of-related-table-nodes-when-hovering-usememo-1 -> origin/enhance-the-highlighting-of-related-table-nodes-when-hovering-usememo-1\n1628:  * [new branch]        error-message-erd-network-error -> origin/error-message-erd-network-error\n1629:  * [new branch]        exclude-positive-feedback-from-suggestion-snippets -> origin/exclude-positive-feedback-from-suggestion-snippets\n...\n\n1658:  * [new branch]        parse-db-structure-in-jobs-package -> origin/parse-db-structure-in-jobs-package\n1659:  * [new branch]        pr-1088                  -> origin/pr-1088\n1660:  * [new branch]        primary-key-icon-2       -> origin/primary-key-icon-2\n1661:  * [new branch]        prompt-test-package      -> origin/prompt-test-package\n1662:  * [new branch]        promptfoo-go-1           -> origin/promptfoo-go-1\n1663:  * [new branch]        reduce-set-node-calling-chance-3 -> origin/reduce-set-node-calling-chance-3\n1664:  * [new branch]        refactor-to-testcases    -> origin/refactor-to-testcases\n1665:  * [new branch]        refactor_edge_cardinality_by_using_custom_mark -> origin/refactor_edge_cardinality_by_using_custom_mark\n1666:  * [new branch]        refactor_hidden_node_handle -> origin/refactor_hidden_node_handle\n1667:  * [new branch]        release-debug-branch     -> origin/release-debug-branch\n1668:  * [new branch]        rename-review-issue-to-review-feedback -> origin/rename-review-issue-to-review-feedback\n1669:  * [new branch]        renovate/major-react-monorepo -> origin/renovate/major-react-monorepo\n1670:  * [new branch]        renovate/pnpm-10.x       -> origin/renovate/pnpm-10.x\n1671:  * [new branch]        renovate/react-monorepo  -> origin/renovate/react-monorepo\n1672:  * [new branch]        renovate/xyflow-react-12.x -> origin/renovate/xyflow-react-12.x\n1673:  * [new branch]        revert-435-error-message-erd -> origin/revert-435-error-message-erd\n1674:  * [new branch]        review-suggestion-patch-suggestion-2 -> origin/review-suggestion-patch-suggestion-2\n...\n\n1760:  * [new tag]           @liam-hq/ui@0.0.13       -> @liam-hq/ui@0.0.13\n1761:  * [new tag]           @liam-hq/ui@0.0.14       -> @liam-hq/ui@0.0.14\n1762:  * [new tag]           @liam-hq/ui@0.0.15       -> @liam-hq/ui@0.0.15\n1763:  \u001b[1m\u001b[7m\u001b[36m RUN \u001b[39m\u001b[27m\u001b[22m \u001b[36mv3.1.1 \u001b[39m\u001b[90m/home/runner/work/liam/liam/frontend/packages/cli\u001b[39m\n1764:  \u001b[32m✓\u001b[39m src/cli/erdCommand/getInputContent.test.ts \u001b[2m(\u001b[22m\u001b[2m8 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 84\u001b[2mms\u001b[22m\u001b[39m\n1765:  (node:9021) ExperimentalWarning: WASI is an experimental feature and might change at any time\n1766:  (Use `node --trace-warnings ...` to show where the warning was created)\n1767:  (node:9116) ExperimentalWarning: WASI is an experimental feature and might change at any time\n1768:  (Use `node --trace-warnings ...` to show where the warning was created)\n1769:  \u001b[32m✓\u001b[39m src/cli/erdCommand/runPreprocess.test.ts \u001b[2m(\u001b[22m\u001b[2m4 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[33m 672\u001b[2mms\u001b[22m\u001b[39m\n1770:  \u001b[32m✓\u001b[39m src/cli/index.test.ts \u001b[2m(\u001b[22m\u001b[2m3 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 20\u001b[2mms\u001b[22m\u001b[39m\n1771:  (node:9226) ExperimentalWarning: WASI is an experimental feature and might change at any time\n1772:  (Use `node --trace-warnings ...` to show where the warning was created)\n1773:  \u001b[32m✓\u001b[39m src/cli/erdCommand/index.test.ts \u001b[2m(\u001b[22m\u001b[2m3 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[32m 14\u001b[2mms\u001b[22m\u001b[39m\n1774:  \u001b[32m✓\u001b[39m src/cli/smoke.test.ts \u001b[2m(\u001b[22m\u001b[2m2 tests\u001b[22m\u001b[2m)\u001b[22m\u001b[33m 42870\u001b[2mms\u001b[22m\u001b[39m\n1775:  \u001b[33m\u001b[2m✓\u001b[22m\u001b[39m CLI Smoke Test\u001b[2m > \u001b[22mshould run the CLI command without errors: `erd` \u001b[33m 4181\u001b[2mms\u001b[22m\u001b[39m\n1776:  \u001b[33m\u001b[2m✓\u001b[22m\u001b[39m CLI Smoke Test\u001b[2m > \u001b[22mshould run the CLI command without errors: `erd build` \u001b[33m 4409\u001b[2mms\u001b[22m\u001b[39m\n1777:  \u001b[2m Test Files \u001b[22m \u001b[1m\u001b[32m5 passed\u001b[39m\u001b[22m\u001b[90m (5)\u001b[39m\n...\n\n1835:  +\n1836:  +\n1837:  +\n1838:  +\n1839:  @@ -1397,17 +1404,16 @@ GRANT ALL ON TABLE \"public\".\"User\" TO \"service_role\";\n1840:  -ALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"postgres\";\n1841:  -ALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"anon\";\n1842:  -ALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"authenticated\";\n1843:  -ALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"service_role\";\n1844:  -\n1845:  +ALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"postgres\";\n1846:  +ALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"anon\";\n1847:  +ALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"authenticated\";\n1848:  +ALTER DEFAULT PRIVILEGES FOR ROLE \"postgres\" IN SCHEMA \"public\" GRANT ALL ON SEQUENCES  TO \"service_role\";\n1849:  Generated types and schema.sql differ from committed files.\n1850:  ##[error]Process completed with exit code 1.\n1851:  Post job cleanup.\n\n```\n</details></td></tr></table>\n\nqodo-merge-pro-for-open-source[bot]: ## PR Reviewer Guide 🔍\n\nHere are some key observations to aid the review process:\n\n<table>\n<tr><td>⏱️&nbsp;<strong>Estimated effort to review</strong>: 3 🔵🔵🔵⚪⚪</td></tr>\n<tr><td>🧪&nbsp;<strong>No relevant tests</strong></td></tr>\n<tr><td>🔒&nbsp;<strong>Security concerns</strong><br><br>\n\n<strong>Service role key exposure:</strong><br> The PR introduces the use of the Supabase service role key which has elevated permissions. While the PR adds a script to extract this key and sets it as an environment variable, ensure that this key is never exposed in client-side code or logged. The service role key bypasses RLS policies and has full database access, so its usage should be strictly limited to server-side operations and background jobs. Verify that the key is only used in appropriate contexts like the jobs package and not in any client-accessible code.</td></tr>\n<tr><td>⚡&nbsp;<strong>Recommended focus areas for review</strong><br><br>\n\n<details><summary><a href='https://github.com/liam-hq/liam/pull/1304/files#diff-95100cba7b6e4bde3595837152d629ec3a6be4ddeca64f51b34170b6cebd2cedR68-R70'><strong>Error Message Localization</strong></a>\n\nThe error message for organization creation failure is now in Japanese. Consider using a localization system or ensuring consistent language usage across the application.\n</summary>\n\n```typescriptreact\nsetError(\n  `組織の作成に失敗しました: ${err instanceof Error ? err.message : '不明なエラー'}`,\n)\n```\n\n</details>\n\n<details><summary><a href='https://github.com/liam-hq/liam/pull/1304/files#diff-13c1746ddb8adf8fdfd4df92a785185d9af1dee975ec91a688efdb2d6d3c0532R7-R7'><strong>Service Role Key Usage</strong></a>\n\nThe client now uses SUPABASE_SERVICE_ROLE_KEY which has elevated permissions. Ensure this is only used in appropriate contexts and not exposed to client-side code.\n</summary>\n\n```typescript\nconst supabaseKey = process.env['SUPABASE_SERVICE_ROLE_KEY']\n\n```\n\n</details>\n\n<details><summary><a href='https://github.com/liam-hq/liam/pull/1304/files#diff-0c4e15857b41c299498e4e05ecb8cd128f23d093944192175833ca70490c8371R13-R24'><strong>Status Filter Removal</strong></a>\n\nThe status filter has been removed from several queries. Verify this is intentional and won't result in inactive organization members having access.\n</summary>\n\n```typescript\n  .from('OrganizationMember')\n  .select(`\n    organization:organizationId(\n      id,\n      name\n    )\n  `)\n  .eq('userId', userData.user.id)\n\nif (error) {\n  console.error('Error fetching organizations:', error)\n  return null\n```\n\n</details>\n\n</td></tr>\n</table>\n\n\nqodo-merge-pro-for-open-source[bot]: ## PR Code Suggestions ✨\n\n<!-- 3ce2da2 -->\n\nExplore these optional code suggestions:\n\n<table><thead><tr><td><strong>Category</strong></td><td align=left><strong>Suggestion&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </strong></td><td align=center><strong>Impact</strong></td></tr><tbody><tr><td rowspan=1>Security</td>\n<td>\n\n\n\n<details><summary>Mask sensitive credentials</summary>\n\n___\n\n\n**Displaying the service role key in plain text in the console output is a <br>security risk. This key grants elevated permissions and should be treated as <br>sensitive information. Consider masking the key in logs or removing this debug <br>output entirely in production code.**\n\n[scripts/extract-supabase-service-key.sh [19]](https://github.com/liam-hq/liam/pull/1304/files#diff-a8a5ff83621a5c8474c5cb63d3e4d245c4cfbf50a5589186b79183034d8b109fR19-R19)\n\n```diff\n-echo \"Extracted service role key: $SERVICE_KEY\"\n+echo \"Extracted service role key: ${SERVICE_KEY:0:5}...${SERVICE_KEY: -5}\" # Show only first and last 5 chars\n```\n\n- [ ] **Apply this suggestion** <!-- /improve --apply_suggestion=0 -->\n\n<details><summary>Suggestion importance[1-10]: 9</summary>\n\n__\n\nWhy: The suggestion addresses a significant security vulnerability by preventing the display of sensitive credentials in logs. This is a critical security best practice that protects against credential exposure.\n\n\n</details></details></td><td align=center>High\n\n</td></tr><tr><td rowspan=1>General</td>\n<td>\n\n\n\n<details><summary>✅ <s>Ensure consistent error messaging</s></summary>\n\n___\n\n<details><summary><b>Suggestion Impact:</b></summary>The commit changed the error message from Japanese to English as suggested, though with slightly different wording than the exact suggestion\n\ncode diff:\n\n```diff\n-      setError(\n-        `組織の作成に失敗しました: ${err instanceof Error ? err.message : '不明なエラー'}`,\n-      )\n+      setError('Failed to create organization. Please try again.')\n```\n\n</details>\n\n\n___\n\n\n**The error message is in Japanese, which might not be consistent with the rest of <br>the application's language. Consider using English for error messages or <br>implementing proper internationalization to ensure consistent user experience <br>across the application.**\n\n[frontend/apps/app/features/organizations/pages/OrganizationNewPage/OrganizationNewPage.tsx [68-70]](https://github.com/liam-hq/liam/pull/1304/files#diff-95100cba7b6e4bde3595837152d629ec3a6be4ddeca64f51b34170b6cebd2cedR68-R70)\n\n```diff\n setError(\n-  `組織の作成に失敗しました: ${err instanceof Error ? err.message : '不明なエラー'}`,\n+  `Failed to create organization: ${err instanceof Error ? err.message : 'Unknown error'}`,\n )\n```\n\n`[Suggestion has been applied]`\n\n<details><summary>Suggestion importance[1-10]: 7</summary>\n\n__\n\nWhy: The suggestion addresses an inconsistency in error message language (Japanese vs English), which improves user experience and application consistency. This is an important usability enhancement.\n\n\n</details></details></td><td align=center>Medium\n\n</td></tr><tr><td rowspan=1>Possible issue</td>\n<td>\n\n\n\n<details><summary>Improve key extraction reliability</summary>\n\n___\n\n\n**The script is extracting the service role key but doesn't properly handle <br>potential whitespace or special characters in the key. The current approach <br>using <code>tr -d ' '</code> removes all spaces, which could be part of a valid key. Consider <br>using a more robust extraction method that preserves the exact key format.**\n\n[scripts/extract-supabase-service-key.sh [8-12]](https://github.com/liam-hq/liam/pull/1304/files#diff-a8a5ff83621a5c8474c5cb63d3e4d245c4cfbf50a5589186b79183034d8b109fR8-R12)\n\n```diff\n # Extract the service role key from the output\n # Using a precise grep pattern to match only the service role key line\n SERVICE_KEY_LINE=$(echo \"$STATUS_OUTPUT\" | grep -m 1 \"service_role key:\")\n \n # Clean up and extract just the key\n-# Remove \"service_role key: \" prefix\n-SERVICE_KEY=$(echo \"$SERVICE_KEY_LINE\" | sed 's/.*service_role key: \\(.*\\)/\\1/' | tr -d ' ')\n+# Remove \"service_role key: \" prefix and trim whitespace\n+SERVICE_KEY=$(echo \"$SERVICE_KEY_LINE\" | sed 's/.*service_role key: \\(.*\\)/\\1/' | xargs)\n```\n\n\n`[To ensure code accuracy, apply this suggestion manually]`\n\n<details><summary>Suggestion importance[1-10]: 6</summary>\n\n__\n\nWhy: The suggestion improves the extraction of the service role key by using xargs instead of tr -d ' ', which preserves the key's format while properly trimming whitespace. This is a meaningful improvement for reliability.\n\n\n</details></details></td><td align=center>Low\n\n</td></tr>\n<tr><td align=\"center\" colspan=\"2\">\n\n- [ ] Update <!-- /improve --more_suggestions=true -->\n\n</td><td></td></tr></tbody></table>\n\nhoshinotsuyoshi: > The project with ID 2 is not part of my organization, so it's being blocked by RLS.\r\n\r\n> https://github.com/user-attachments/assets/6f94e528-c39e-489c-a622-e43812b41ea5\r\n\r\n👍 👍 👍 \r\n\r\n\r\n----\r\n\r\nnits:\r\n\r\n> I set the Supabase service role key as an environment variable in Trigger.dev and Vercel, and confirmed that the job runs successfully.\r\n> <img width=\"638\" alt=\"スクリーンショット 2025-04-11 18 22 30\" src=\"https://github.com/user-attachments/assets/a03d48d6-ca5e-4c4e-87c0-ad99123d4f01\" />\r\n\r\n👍 but I cannot confirm save-pull-request process requires reading the table (`Project`) . \r\nIt seems that some functions like `src/functions/processGenerateSchemaMeta.ts` or `src/functions/processCreateKnowledgeSuggestion.ts`   requires reading the table .\r\n"
}
}
